{"version":3,"file":"picasso-q.js","sources":["../node_modules/d3-hierarchy/src/hierarchy/count.js","../node_modules/d3-hierarchy/src/hierarchy/each.js","../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../node_modules/d3-hierarchy/src/hierarchy/sum.js","../node_modules/d3-hierarchy/src/hierarchy/sort.js","../node_modules/d3-hierarchy/src/hierarchy/path.js","../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../node_modules/d3-hierarchy/src/hierarchy/descendants.js","../node_modules/d3-hierarchy/src/hierarchy/leaves.js","../node_modules/d3-hierarchy/src/hierarchy/links.js","../node_modules/d3-hierarchy/src/hierarchy/index.js","../node_modules/d3-hierarchy/src/pack/enclose.js","../node_modules/d3-hierarchy/src/treemap/dice.js","../node_modules/d3-hierarchy/src/tree.js","../node_modules/d3-hierarchy/src/treemap/slice.js","../node_modules/d3-hierarchy/src/treemap/squarify.js","../src/json-path-resolver.js","../src/data/augment-hierarchy.js","../src/data/util.js","../src/data/extractor-k.js","../node_modules/extend/index.js","../src/data/extractor-s.js","../node_modules/number-format.js/lib/format.min.js","../src/formatter/parts/qs-number-formatter.js","../src/formatter/numberFormat.js","../src/formatter/parts/qs-date-formatter.js","../src/formatter/timeFormat.js","../src/formatter/index.js","../src/data/field.js","../src/data/dataset.js","../src/brush/q-brush.js","../src/index.js"],"sourcesContent":["function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","import {shuffle, slice} from \"../array\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import {Node} from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","/**\n * Resolves the value at the given JSON path\n * @private\n * @param  {String} path [description]\n * @param  {Object} obj  [description]\n * @return {Object}      [description]\n *\n * @example\n * let path = \"/path/to/paradise\";\n * let obj = {\n *   path: {\n *     to: { paradise: \"heaven\"},\n *     from: {...}\n *   }\n * };\n * resolve( path, obj ); // \"heaven\"\n */\nexport default function resolve(path, obj) {\n  if (path.charAt(0) === '/') {\n    path = path.substring(1);\n  }\n  const arr = path.split('/');\n  let subpath;\n  let container = obj;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === '*' && Array.isArray(container)) {\n      const carr = [];\n      subpath = arr.slice(i + 1).join('/');\n      for (let c = 0; c < container.length; c++) {\n        let v = resolve(subpath, container[c]);\n        // v.forEach(_ => _._parent = container[c]);\n        if (Array.isArray(v)) {\n          carr.push(...v);\n        } else {\n          carr.push(v);\n        }\n      }\n      return carr;\n      // return container.map(v => resolve(arr.slice(i + 1).join('/'), v));\n    } else if (!arr[i] && Array.isArray(container)) {\n      const carr = new Array(container.length);\n      subpath = arr.slice(i + 1).join('/');\n      for (let c = 0; c < container.length; c++) {\n        carr[c] = resolve(subpath, container[c]);\n      }\n      return carr;\n      // return container.map(v => resolve(arr.slice(i + 1).join('/'), v));\n    } else if (arr[i] in container) {\n      container = container[arr[i]];\n    }\n  }\n\n  return container;\n}\n","import {\n  hierarchy\n} from 'd3-hierarchy';\n\nimport picker from '../json-path-resolver';\n\nfunction getKPath(fieldIdx, cube) {\n  let idx = fieldIdx;\n  const numDimz = cube.qDimensionInfo.length;\n  const numMeas = cube.qMeasureInfo.length;\n  const order = cube.qEffectiveInterColumnSortOrder;\n  if (idx < numDimz && order) {\n    idx = order.indexOf(idx);\n  } else if (idx >= numDimz && order && numMeas > 1 && order.indexOf(-1) !== -1) {\n    idx = order.indexOf(-1);\n  }\n  let s = '/qData/*/qSubNodes';\n  const depth = Math.max(0, Math.min(idx, numDimz));\n  let i = 0;\n  for (; i < depth; i++) { // traverse down to specified depth\n    s += '/*/qSubNodes';\n  }\n  if (fieldIdx >= numDimz) {\n    // if the depth is a pseudo level, pick the given pseudo dimension, and then traverse down to leaf level (value nodes)\n    if (numMeas > 1) {\n      s += `/${fieldIdx - numDimz}/qSubNodes`; // pick pseudo dimension (measure)\n      ++i;\n      // traverse to value nodes\n      for (; i <= numDimz; i++) {\n        s += '/*/qSubNodes';\n      }\n    } else {\n      s += `/${fieldIdx - numDimz}`;\n    }\n  }\n  return s;\n}\n\nfunction getAttrPath(s, attrIdx, attrDimIdx) {\n  if (typeof attrIdx === 'number') {\n    return `${s}/*/qAttrExps/qValues/${attrIdx}`;\n  }\n  if (typeof attrDimIdx === 'number') {\n    return `${s}/*/qAttrDims/qValues/${attrDimIdx}`;\n  }\n  return s;\n}\n\n\nfunction getPathToFieldItems(field, {\n  cache,\n  cube\n}) {\n  if (!field) {\n    return '';\n  }\n  let fieldIdx = cache.fields.indexOf(field);\n  let attrIdx;\n  let attrDimIdx;\n  if (fieldIdx === -1) {\n    for (let i = 0; i < cache.attributeDimensionFields.length; i++) {\n      attrDimIdx = cache.attributeDimensionFields[i] ? cache.attributeDimensionFields[i].indexOf(field) : -1;\n      if (attrDimIdx !== -1) {\n        fieldIdx = i;\n        break;\n      }\n    }\n  }\n  if (fieldIdx === -1) {\n    for (let i = 0; i < cache.attributeExpressionFields.length; i++) {\n      attrIdx = cache.attributeExpressionFields[i] ? cache.attributeExpressionFields[i].indexOf(field) : -1;\n      if (attrIdx !== -1) {\n        fieldIdx = i;\n        break;\n      }\n    }\n  }\n  return getAttrPath(getKPath(fieldIdx, cube), attrIdx >= 0 ? attrIdx : undefined, attrDimIdx >= 0 ? attrDimIdx : undefined);\n}\n\nfunction getTreePath(field, { cache, cube }) {\n  const s1 = getPathToFieldItems(field, { cache, cube });\n  const s2 = s1.replace(/qSubNodes/g, 'children');\n  const s3 = s2.replace(/children$/g, 'children/*');\n  return s3.replace(/qData\\/\\*/, '');\n}\n\nexport default function augment(config, dataset, cache, deps) {\n  const rootPath = '/qStackedDataPages/*/qData';\n  const cube = dataset.raw();\n\n  const root = picker(rootPath, cube);\n  if (!root || !root[0]) {\n    return null;\n  }\n\n  const h = hierarchy(root[0], config.children || (node => node.qSubNodes));\n\n  const height = h.height;\n  const propDefs = [];\n  for (let i = 0; i <= height; i++) {\n    const { props, main } = deps.normalizeConfig(config, dataset);\n    const propsArr = Object.keys(props);\n    propDefs[i] = { propsArr, props, main };\n    let currentField = null;\n    const isRoot = i === 0;\n    if (i > 0) {\n      let idx = cube.qEffectiveInterColumnSortOrder[i - 1];\n      // if (idx === -1) { // pseudo\n      //   let childIdx = node.parent.children.indexOf(node);\n      //   idx = cube.qDimensionInfo.length + childIdx; // measure field\n      // }\n      if (i > cube.qEffectiveInterColumnSortOrder.length) {\n        idx = cube.qDimensionInfo.length;\n      }\n\n      currentField = cache.fields[idx];\n    }\n    const currentItemsPath = currentField ? getTreePath(currentField, { cube, cache }) : rootPath;\n\n    propsArr.forEach((prop) => {\n      const pCfg = props[prop];\n      const arr = pCfg.fields ? pCfg.fields : [pCfg];\n      arr.forEach((p) => {\n        if (p.field) {\n          const fieldPath = getTreePath(p.field, { cube, cache });\n          if (fieldPath === currentItemsPath) {\n            p.isSame = true;\n          } else if (isRoot) {\n            p.isDescendant = true;\n            p.path = `${fieldPath}/data`;\n          } else {\n            const isDescendant = fieldPath.match(/\\//g).length > currentItemsPath.match(/\\//g).length;\n            let pathToNode = '';\n            if (isDescendant) {\n              pathToNode = `${fieldPath.replace(currentItemsPath, '').replace(/^\\/\\*/, '')}/data`;\n            } else {\n              pathToNode = Math.ceil((currentItemsPath.match(/\\//g).length - fieldPath.match(/\\//g).length) / 2);\n            }\n            p.isDescendant = isDescendant;\n            p.path = pathToNode;\n          }\n        }\n      });\n    });\n  }\n\n  const originalData = [];\n  let expando = 0;\n  h.each((node) => {\n    const currentOriginal = originalData[expando++] = node.data;\n    const propsArr = propDefs[node.depth].propsArr;\n    const props = propDefs[node.depth].props;\n    const main = propDefs[node.depth].main;\n\n    node.data = {\n      value: typeof main.value === 'function' ? main.value(currentOriginal) : currentOriginal\n    };\n    propsArr.forEach((prop) => {\n      const pCfg = props[prop];\n      const arr = pCfg.fields ? pCfg.fields : [pCfg];\n      let coll;\n      if (pCfg.fields) {\n        coll = [];\n      }\n      arr.forEach((p) => {\n        let fn = v => v;\n        let value;\n        if (p.type === 'primitive') {\n          value = p.value;\n        } else {\n          if (typeof p.value === 'function') {\n            fn = (v, n) => p.value(v, n);\n          }\n          if (!p.field) {\n            value = currentOriginal;\n          } else if (p.isSame) {\n            value = currentOriginal;\n          } else if (p.isDescendant) {\n            value = picker(p.path, node);\n            if (Array.isArray(value)) {\n              value = value.map(fn);\n              fn = p.reduce || (v => v.join(', '));\n            }\n          } else if (p.path) { // ancestor\n            const num = p.path || 0;\n            let it = node;\n            for (let i = 0; i < num; i++) {\n              it = it.parent;\n            }\n            value = it.data.value;\n          }\n        }\n        if (pCfg.fields) {\n          coll.push(fn(value, node));\n        } else {\n          node.data[prop] = {\n            value: fn(value, node)\n          };\n          if (p.source) {\n            node.data[prop].source = { field: p.source };\n          }\n        }\n      });\n\n      // reduce row if multiple fields\n      if (coll) {\n        node.data[prop] = {\n          value: typeof pCfg.value === 'function' ? pCfg.value(coll, node) : coll\n        };\n      }\n    });\n  });\n\n  return h;\n}\n","function flattenTree(children, steps, prop, arrIndexAtTargetDepth) {\n  const arr = [];\n  if (!children || !children.length) {\n    return arr;\n  }\n  if (steps <= 0) {\n    const nodes = arrIndexAtTargetDepth >= 0 ? [children[arrIndexAtTargetDepth]] : children;\n    if (prop) {\n      arr.push(...nodes.map(v => v[prop]));\n    } else {\n      arr.push(...nodes);\n    }\n  } else {\n    for (let i = 0; i < children.length; i++) {\n      if (children[i].children && children[i].children.length) {\n        arr.push(...flattenTree(children[i].children, steps - 1, prop, arrIndexAtTargetDepth));\n      }\n    }\n  }\n  return arr;\n}\n\nexport function treeAccessor(sourceDepth, targetDepth, prop, arrIndexAtTargetDepth) {\n  if (sourceDepth === targetDepth) {\n    let fn;\n    if (prop) {\n      fn = Function('node', `return node.${prop};`); // eslint-disable-line no-new-func\n    } else {\n      fn = d => d;\n    }\n    return fn;\n  }\n  if (sourceDepth > targetDepth) { // traverse upwards\n    const steps = Math.max(0, Math.min(100, sourceDepth - targetDepth));\n    const path = [...Array(steps)].map(String.prototype.valueOf, 'parent').join('.');\n    let fn;\n    if (prop) {\n      fn = Function('node', `return node.${path}.${prop};`); // eslint-disable-line no-new-func\n    } else {\n      fn = Function('node', `return node.${path};`); // eslint-disable-line no-new-func\n    }\n    return fn;\n  }\n  if (targetDepth > sourceDepth) { // flatten descendants\n    const steps = Math.max(0, Math.min(100, targetDepth - sourceDepth));\n    const fn = node => flattenTree(node.children, steps - 1, prop, arrIndexAtTargetDepth);\n    return fn;\n  }\n  return false;\n}\n\nexport function findField(query, { cache }) {\n  // if (ATTR_DIM_RX.test(id) && query) { // true if this table is an attribute dimension table\n  //   const idx = +/\\/(\\d+)/.exec(query)[1];\n  //   return fields[idx];\n  // }\n\n  if (typeof query === 'number') {\n    return cache.fields[query];\n  }\n\n  const allFields = cache.fields.slice();\n  (cache.attributeDimensionFields || []).forEach(fields => allFields.push(...fields));\n  (cache.attributeExpressionFields || []).forEach(fields => allFields.push(...fields));\n  if (typeof query === 'function') {\n    for (let i = 0; i < allFields.length; i++) {\n      if (query(allFields[i])) {\n        return allFields[i];\n      }\n    }\n    return false;\n  } else if (typeof query === 'string') {\n    for (let i = 0; i < allFields.length; i++) {\n      // console.log(allFields[i].key());\n      if (allFields[i].key() === query || allFields[i].title() === query) {\n        return allFields[i];\n      }\n    }\n  } else if (query && allFields.indexOf(query) !== -1) { // assume 'query' is a field instance\n    return query;\n  }\n\n  throw Error(`Field not found: ${query}`);\n}\n","import {\n  hierarchy\n} from 'd3-hierarchy';\n\nimport picker from '../json-path-resolver';\n\nimport {\n  treeAccessor\n} from './util';\n\nconst DIM_RX = /^qDimensionInfo(?:\\/(\\d+))?/;\nconst M_RX = /^qMeasureInfo\\/(\\d+)/;\nconst ATTR_EXPR_RX = /\\/qAttrExprInfo\\/(\\d+)/;\nconst ATTR_DIM_RX = /\\/qAttrDimInfo\\/(\\d+)/;\n\nfunction getFieldDepth(field, { cube }) {\n  if (!field) {\n    return -1;\n  }\n  let key = field.key();\n  let isFieldDimension = false;\n  let fieldIdx = -1; // cache.fields.indexOf(field);\n  let attrIdx = -1;\n  let attrDimIdx = -1;\n  let fieldDepth = -1;\n  let pseudoMeasureIndex = -1;\n  let remainder;\n\n  if (DIM_RX.test(key)) {\n    isFieldDimension = true;\n    fieldIdx = +DIM_RX.exec(key)[1];\n    remainder = key.replace(DIM_RX, '');\n  } else if (M_RX.test(key)) {\n    pseudoMeasureIndex = +M_RX.exec(key)[1];\n    remainder = key.replace(M_RX, '');\n  }\n\n  if (remainder) {\n    if (ATTR_DIM_RX.exec(remainder)) {\n      attrDimIdx = +ATTR_DIM_RX.exec(remainder)[1];\n    } else if (ATTR_EXPR_RX.exec(remainder)) {\n      attrIdx = +ATTR_EXPR_RX.exec(remainder)[1];\n    }\n  }\n\n  const treeOrder = cube.qEffectiveInterColumnSortOrder;\n\n  if (isFieldDimension) {\n    fieldDepth = treeOrder ? treeOrder.indexOf(fieldIdx) : fieldIdx;\n  } else if (treeOrder && treeOrder.indexOf(-1) !== -1) { // if pseudo dimension exists in sort order\n    fieldDepth = treeOrder.indexOf(-1); // depth of pesudodimension\n  } else { // assume measure is at the bottom of the tree\n    fieldDepth = cube.qDimensionInfo.length;\n  }\n\n  return {\n    fieldDepth: fieldDepth + 1, // +1 due to root node\n    pseudoMeasureIndex,\n    attrDimIdx,\n    attrIdx\n  };\n}\n\nfunction getFieldAccessor(sourceDepthObject, targetDepthObject, prop) {\n  let nodeFn = treeAccessor(sourceDepthObject.fieldDepth, targetDepthObject.fieldDepth, prop, targetDepthObject.pseudoMeasureIndex);\n  let attrFn;\n\n  if (targetDepthObject.attrDimIdx >= 0) {\n    attrFn = data => data.qAttrDims.qValues[targetDepthObject.attrDimIdx];\n  } else if (targetDepthObject.attrIdx >= 0) {\n    attrFn = data => data.qAttrExps.qValues[targetDepthObject.attrIdx];\n  }\n\n  return {\n    nodeFn,\n    attrFn\n  };\n}\n\nfunction datumExtract(propCfg, cell, {\n  key\n}) {\n  const datum = {\n    value: typeof propCfg.value === 'function' ? propCfg.value(cell) : typeof propCfg.value !== 'undefined' ? propCfg.value : cell  // eslint-disable-line no-nested-ternary\n  };\n\n  datum.label = typeof propCfg.label === 'function' ? propCfg.label(cell) : typeof propCfg.label !== 'undefined' ? String(propCfg.label) : String(datum.value);  // eslint-disable-line no-nested-ternary\n\n  if (propCfg.field) {\n    datum.source = {\n      key,\n      field: propCfg.field.key()\n    };\n  }\n\n  return datum;\n}\n\nexport default function extract(config, dataset, cache, util) {\n  const cfgs = Array.isArray(config) ? config : [config];\n  let dataItems = [];\n  cfgs.forEach((cfg) => {\n    if (typeof cfg.field !== 'undefined') {\n      const cube = dataset.raw();\n      const sourceKey = dataset.key();\n      const f = typeof cfg.field === 'object' ? cfg.field : dataset.field(cfg.field);\n      const { props, main } = util.normalizeConfig(cfg, dataset);\n      const propsArr = Object.keys(props);\n      const rootPath = '/qStackedDataPages/*/qData';\n      if (!cache.tree) {\n        const root = picker(rootPath, cube);\n        cache.tree = hierarchy(root[0], node => node.qSubNodes);\n      }\n      const itemDepthObject = getFieldDepth(f, { cube, cache });\n      const { nodeFn, attrFn } = getFieldAccessor({ fieldDepth: 0 }, itemDepthObject);\n\n      const track = !!cfg.trackBy;\n      const trackType = typeof cfg.trackBy;\n      const tracker = {};\n      const trackedItems = [];\n\n      const items = nodeFn(cache.tree);\n      propsArr.forEach((prop) => {\n        const pCfg = props[prop];\n        const arr = pCfg.fields ? pCfg.fields : [pCfg];\n        arr.forEach((p) => {\n          if (p.field) {\n            if (p.field === f) {\n              p.isSame = true;\n            } else {\n              const depthObject = getFieldDepth(p.field, { cube, cache });\n              const accessors = getFieldAccessor(itemDepthObject, depthObject, 'data');\n              p.accessor = accessors.nodeFn;\n              p.attrAccessor = accessors.attrFn;\n            }\n          }\n        });\n      });\n      const mapped = [];\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        const itemData = attrFn ? attrFn(item.data) : item.data;\n        const exclude = main.filter && !main.filter(itemData);\n        if (exclude) {\n          continue;\n        }\n        const ret = datumExtract(main, itemData, { key: sourceKey });\n        propsArr.forEach((prop) => {\n          const pCfg = props[prop];\n          const arr = pCfg.fields || [pCfg];\n          let coll;\n          if (pCfg.fields) {\n            coll = [];\n          }\n          arr.forEach((p) => {\n            let fn;\n            let value;\n            if (p.type === 'primitive') {\n              value = p.value;\n            } else {\n              if (typeof p.value === 'function') { // accessor function\n                fn = p.value;\n              }\n              if (p.accessor) {\n                value = p.accessor(item);\n                if (Array.isArray(value)) { // propably descendants\n                  if (p.attrAccessor) {\n                    value = value.map(p.attrAccessor);\n                  }\n                  if (fn) {\n                    value = value.map(fn);\n                    fn = null;\n                  }\n                  value = p.reduce ? p.reduce(value) : value;\n                } else {\n                  value = p.attrAccessor ? p.attrAccessor(value) : value;\n                }\n              } else {\n                value = itemData;\n              }\n            }\n            if (pCfg.fields) {\n              coll.push(fn ? fn(value) : value);\n            } else {\n              ret[prop] = {\n                value: fn ? fn(value) : value\n              };\n              ret[prop].label = String(ret[prop].value);\n              if (p.field) {\n                ret[prop].source = { field: p.field.key(), key: sourceKey };\n              }\n            }\n          });\n          if (coll) {\n            ret[prop] = {\n              value: typeof pCfg.value === 'function' ? pCfg.value(coll) : coll\n            };\n            ret[prop].label = String(ret[prop].value);\n          }\n        });\n        // collect items based on the trackBy value\n        // items with the same trackBy value are placed in an array and reduced later\n        if (track) {\n          util.track({\n            cfg,\n            itemData,\n            obj: ret,\n            target: trackedItems,\n            tracker,\n            trackType\n          });\n        }\n        mapped.push(ret);\n      }\n      // reduce if items have been grouped\n      if (track) {\n        dataItems.push(...util.collect(trackedItems, {\n          main,\n          propsArr,\n          props\n        }));\n      } else {\n        dataItems.push(...mapped);\n      }\n    }\n  });\n  return dataItems;\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","import extend from 'extend';\n\nexport function getFieldAccessor(field, page, deps) {\n  if (!field) {\n    return -1;\n  }\n  const cache = deps.cache;\n  let fieldIdx = cache.fields.indexOf(field);\n  let attrIdx = -1;\n  let attrDimIdx = -1;\n  if (fieldIdx === -1) {\n    for (let i = 0; i < cache.attributeDimensionFields.length; i++) {\n      attrDimIdx = cache.attributeDimensionFields[i] ? cache.attributeDimensionFields[i].indexOf(field) : -1;\n      if (attrDimIdx !== -1) {\n        fieldIdx = i;\n        break;\n      }\n    }\n  }\n  if (fieldIdx === -1) {\n    for (let i = 0; i < cache.attributeExpressionFields.length; i++) {\n      attrIdx = cache.attributeExpressionFields[i] ? cache.attributeExpressionFields[i].indexOf(field) : -1;\n      if (attrIdx !== -1) {\n        fieldIdx = i;\n        break;\n      }\n    }\n  }\n\n  fieldIdx -= page.qArea.qLeft;\n  if (fieldIdx < 0 || fieldIdx >= page.qArea.qWidth) {\n    // throw new Error('Field out of range');\n    return -1;\n  }\n\n  let path = `row[${fieldIdx}]`;\n\n  if (attrDimIdx >= 0) {\n    return Function('row', `return ${path}.qAttrDims.qValues[${attrDimIdx}];`); // eslint-disable-line no-new-func\n  } else if (attrIdx >= 0) {\n    return Function('row', `return ${path}.qAttrExps.qValues[${attrIdx}];`); // eslint-disable-line no-new-func\n  }\n\n  return Function('row', `return ${path};`); // eslint-disable-line no-new-func\n}\n\n// TODO - handle 'other' value\n// const specialTextValues = {\n//   '-3': (meta) => {\n//     if ('othersLabel' in meta) {\n//       return meta.othersLabel;\n//     }\n//     return '';\n//   }\n// };\n\nfunction datumExtract(propCfg, cell, {\n  key\n}) {\n  const datum = {\n    value: typeof propCfg.value === 'function' ? propCfg.value(cell) : typeof propCfg.value !== 'undefined' ? propCfg.value : cell  // eslint-disable-line no-nested-ternary\n  };\n\n  datum.label = typeof propCfg.label === 'function' ? propCfg.label(cell) : typeof propCfg.label !== 'undefined' ? String(propCfg.label) : String(datum.value);  // eslint-disable-line no-nested-ternary\n\n  if (propCfg.field) {\n    datum.source = {\n      key,\n      field: propCfg.field.key()\n    };\n  }\n\n  return datum;\n}\n\nfunction cellToValue({\n  cache,\n  f,\n  mainCell,\n  p,\n  prop,\n  page,\n  rowIdx,\n  row,\n  sourceKey,\n  target,\n  targetProp\n}) {\n  let propCell = mainCell;\n  if (p.field && p.field !== f) {\n    const propCellFn = getFieldAccessor(p.field, page, { cache });\n    if (propCellFn === -1) {\n      return;\n    }\n    propCell = extend({ qRow: rowIdx }, propCellFn(row));\n  }\n  target[targetProp] = datumExtract(p, propCell, { key: sourceKey }, prop);\n}\n\nexport default function extract(config, dataset, cache, util) {\n  const cfgs = Array.isArray(config) ? config : [config];\n  let dataItems = [];\n  cfgs.forEach((cfg) => {\n    if (typeof cfg.field !== 'undefined') {\n      const cube = dataset.raw();\n      const sourceKey = dataset.key();\n      const f = typeof cfg.field === 'object' ? cfg.field : dataset.field(cfg.field);\n      const { props, main } = util.normalizeConfig(cfg, dataset);\n      const propsArr = Object.keys(props);\n\n      const track = !!cfg.trackBy;\n      const trackType = typeof cfg.trackBy;\n      const tracker = {};\n      const trackedItems = [];\n      const items = [];\n\n      cube.qDataPages.forEach((page) => {\n        const fn = getFieldAccessor(f, page, { cache });\n        if (fn === -1) {\n          return;\n        }\n        page.qMatrix.forEach((row, i) => {\n          const rowIdx = page.qArea.qTop + i;\n          const mainCell = extend({ qRow: rowIdx }, fn(row));\n          const ret = datumExtract(main, mainCell, { key: sourceKey });\n          const exclude = main.filter && !main.filter(mainCell);\n          if (exclude) {\n            return;\n          }\n\n          // loop through all props that need to be mapped and\n          // assign 'value' and 'source' to each property\n          propsArr.forEach((prop) => {\n            const p = props[prop];\n            let arr = p.fields || [p];\n\n            if (p.fields) {\n              ret[prop] = [];\n            }\n            arr.forEach((pp, fidx) => {\n              cellToValue({\n                cache,\n                f,\n                mainCell,\n                p: pp,\n                prop,\n                props,\n                page,\n                rowIdx,\n                row,\n                sourceKey,\n                target: p.fields ? ret[prop] : ret,\n                targetProp: p.fields ? fidx : prop\n              });\n            });\n            // if (!track && p.fields) {\n            //   const fieldValues = ret[prop].map(v => v.value);\n            //   ret[prop] = {\n            //     value: typeof p.reduce === 'function' ? p.reduce(fieldValues) : fieldValues\n            //   };\n            // }\n            if (p.fields) {\n              const fieldValues = ret[prop].map(v => v.value);\n              const fieldLabels = ret[prop].map(v => v.label);\n              ret[prop] = {\n                value: typeof p.value === 'function' ? p.value(fieldValues) : typeof p.value !== 'undefined' ? p.value : fieldValues  // eslint-disable-line no-nested-ternary\n              };\n              ret[prop].label = typeof p.label === 'function' ? p.label(fieldLabels) : typeof p.label !== 'undefined' ? String(p.label) : String(ret[prop].value);  // eslint-disable-line no-nested-ternary\n            }\n          });\n\n          // collect items based on the trackBy value\n          // items with the same trackBy value are placed in an array and reduced later\n          if (track) {\n            util.track({\n              cfg,\n              itemData: mainCell,\n              obj: ret,\n              target: trackedItems,\n              tracker,\n              trackType\n            });\n          }\n\n          items.push(ret);\n        });\n      });\n\n      // reduce if items have been grouped\n      if (track) {\n        dataItems.push(...util.collect(trackedItems, {\n          main,\n          propsArr,\n          props\n        }));\n      } else {\n        dataItems.push(...items);\n      }\n    }\n  });\n  return dataItems;\n}\n","/*! javascript-number-formatter - v1.1.11 - http://mottie.github.com/javascript-number-formatter/ * © ecava */\n!function(a,b){\"function\"==typeof define&&define.amd?define([],b):\"object\"==typeof module?module.exports=b():a.format=b()}(this,function(){return function(a,b){\"use strict\";if(!a||isNaN(+b))return b;var c,d,e,f,g,h,i,j,k,l,m=a.length,n=a.search(/[0-9\\-\\+#]/),o=n>0?a.substring(0,n):\"\",p=a.split(\"\").reverse().join(\"\"),q=p.search(/[0-9\\-\\+#]/),r=m-q,s=a.substring(r,r+1),t=r+(\".\"===s||\",\"===s?1:0),u=q>0?a.substring(t,m):\"\";if(a=a.substring(n,t),b=\"-\"===a.charAt(0)?-b:+b,c=b<0?b=-b:0,d=a.match(/[^\\d\\-\\+#]/g),e=d&&d[d.length-1]||\".\",f=d&&d[1]&&d[0]||\",\",a=a.split(e),b=b.toFixed(a[1]&&a[1].length),b=+b+\"\",h=a[1]&&a[1].lastIndexOf(\"0\"),j=b.split(\".\"),(!j[1]||j[1]&&j[1].length<=h)&&(b=(+b).toFixed(h+1)),k=a[0].split(f),a[0]=k.join(\"\"),g=a[0]&&a[0].indexOf(\"0\"),g>-1)for(;j[0].length<a[0].length-g;)j[0]=\"0\"+j[0];else 0===+j[0]&&(j[0]=\"\");if(b=b.split(\".\"),b[0]=j[0],i=k[1]&&k[k.length-1].length){for(l=b[0],p=\"\",r=l.length%i,m=l.length,t=0;t<m;t++)p+=l.charAt(t),!((t-r+1)%i)&&t<m-i&&(p+=f);b[0]=p}return b[1]=a[1]&&b[1]?e+b[1]:\"\",d=b.join(\"\"),\"0\"!==d&&\"\"!==d||(c=!1),o+((c?\"-\":\"\")+d)+u}});","import formatter from 'number-format.js';\n\nfunction escapeRegExp(str) {\n  return str.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&');\n}\n\n/*\n* Created by Miralem Drek (mek)\n* Re-formatted and fitted into picasso by Hannes Lindquist (bge)\n*/\nconst SIprefixes = {\n    3: 'k',\n    6: 'M',\n    9: 'G',\n    12: 'T',\n    15: 'P',\n    18: 'E',\n    21: 'Z',\n    24: 'Y',\n    '-3': 'm',\n    '-6': 'μ',\n    '-9': 'n',\n    '-12': 'p',\n    '-15': 'f',\n    '-18': 'a',\n    '-21': 'z',\n    '-24': 'y'\n  },\n  percentage = /%$/,\n  //    scientific = /e[\\+\\-][0-9]+/,\n  radix = /^\\(r(0[2-9]|[12]\\d|3[0-6])\\)/i,\n  oct = /^\\(oct\\)/i,\n  dec = /^\\(dec\\)/i,\n  hex = /^\\(hex\\)/i,\n  bin = /^\\(bin\\)/i,\n  rom = /^\\(rom\\)/i,\n  functional = /^(\\(rom\\)|\\(bin\\)|\\(hex\\)|\\(dec\\)|\\(oct\\)|\\(r(0[2-9]|[12]\\d|3[0-6])\\))/i;\n\nfunction formatRadix(value, fradix, pattern, decimal) {\n  value = value.toString(fradix);\n  if (pattern[1] === pattern[1].toUpperCase()) {\n    value = value.toUpperCase();\n  }\n  if (value.length - value.indexOf('.') > 10) { // limit to 10 decimal places\n    value = value.slice(0, value.indexOf('.') + 11);\n  }\n\n  return value.replace('.', decimal || '.');\n}\n\n// value must be an integer\n// value must not be in scientific notation\nfunction formatRoman(value, pattern) {\n  let i,\n    s = '',\n    v = Number(String(value).slice(-3)),\n    nThousands = (value - v) / 1000,\n    decimal = [0, 1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900].reverse(),\n    numeral = ['0', 'I', 'IV', 'V', 'IX', 'X', 'XL', 'L', 'XC', 'C', 'CD', 'D', 'CM'].reverse();\n\n  while (v > 0) {\n    for (i = 0; i < decimal.length; i++) {\n      if (decimal[i] <= v) {\n        s += numeral[i];\n        v -= decimal[i];\n        break;\n      }\n    }\n  }\n\n  for (i = 0; i < nThousands; i++) {\n    s = `M${s}`;\n  }\n\n  if (pattern[1] !== pattern[1].toUpperCase()) {\n    s = s.toLowerCase();\n  }\n  return s;\n}\n\nfunction formatFunctional(value, pattern, d) {\n  let temp;\n  if (radix.test(pattern)) {\n    value = formatRadix(value, Number(/\\d{2}/.exec(pattern)[0]), pattern, d);\n  } else if (oct.test(pattern)) {\n    value = formatRadix(value, 8, pattern, d);\n  } else if (dec.test(pattern)) {\n    value = formatRadix(value, 10, pattern, d);\n  } else if (hex.test(pattern)) {\n    value = formatRadix(value, 16, pattern, d);\n  } else if (bin.test(pattern)) {\n    value = formatRadix(value, 2, pattern, d);\n  } else if (rom.test(pattern)) {\n    temp = '';\n    if (value < 0) {\n      temp = '-';\n      value = -value;\n    }\n    value = Math.floor(value);\n    if (value === 0) {\n      value = '0';\n    } else if (value <= 500000) { // limit in engine\n      value = formatRoman(value, pattern);\n      value = temp + value;\n    } else {\n      value = pattern + temp + value.toExponential(0); // to return same result as engine\n    }\n  }\n\n  return value;\n}\n\nfunction escape(value, flags, justStr) {\n  const str = escapeRegExp(value);\n  if (justStr) {\n    return str;\n  }\n  return new RegExp(str || '', flags);\n}\n\nfunction createRegExp(thousand, decimal) {\n  if (decimal) {\n    decimal = escapeRegExp(decimal);\n  }\n  if (thousand) {\n    thousand = escapeRegExp(thousand);\n  }\n  return new RegExp(`(?:[#0]+${thousand})?[#0]+(?:${decimal}[#0]+)?`);\n}\n\nfunction preparePattern(o, t, d) {\n  let parts,\n    lastPart,\n    pattern = o.pattern,\n    numericPattern,\n    prefix,\n    postfix,\n    groupTemp,\n    decTemp,\n    temp,\n    regex;\n\n  if (pattern.indexOf('A') >= 0) { // abbreviate SI\n    pattern = pattern.replace('A', '');\n    o.abbreviate = true;\n  }\n\n  // extract the numeric part from the pattern\n  regex = createRegExp(t, d);\n  numericPattern = pattern.match(regex);\n  numericPattern = numericPattern ? numericPattern[0] : '';\n  prefix = numericPattern ? pattern.substr(0, pattern.indexOf(numericPattern)) : pattern;\n  postfix = numericPattern ? pattern.substring(pattern.indexOf(numericPattern) + numericPattern.length) : '';\n\n  if (!numericPattern) {\n    numericPattern = pattern ? '#' : '##########';\n  }\n\n  if (t && t === d) { // ignore grouping if grouping separator is same as decimal separator\n    // extract decimal part\n    parts = numericPattern.split(d);\n    lastPart = parts.pop();\n    numericPattern = parts.join('') + d + lastPart;\n    t = '';\n  }\n\n  // formatting library does not support multiple characters as separator (nor +-).\n  // do a temporary replacement\n  groupTemp = t;\n  t = /,/.test(d) ? '¤' : ',';\n  if (groupTemp) {\n    numericPattern = numericPattern.replace(escape(groupTemp, 'g'), t);\n  }\n\n  decTemp = d;\n  d = '.';\n  if (decTemp) {\n    numericPattern = numericPattern.replace(escape(decTemp, 'g'), d);\n  }\n\n  temp = numericPattern.match(/#/g);\n  temp = temp ? temp.length : 0;\n\n  o.prefix = prefix || '';\n  o.postfix = postfix || '';\n  o.pattern = pattern;\n  o.percentage = percentage.test(pattern);\n  o.numericPattern = numericPattern || '';\n  o.numericRegex = new RegExp(`${escape(t, null, true)}|${escape(d, null, true)}`, 'g');\n  o.groupTemp = groupTemp;\n  o.decTemp = decTemp;\n  o.t = t;\n  o.d = d;\n  o.temp = temp;\n}\n\nclass NumberFormatter {\n  /**\n   * @name NumberFormatter\n   * @constructs\n   * @param {Object} localeInfo\n   * @param {String} pattern\n   * @param {String} [thousand]\n   * @param {String} [decimal]\n   * @param {String} [type]\n   */\n  constructor(localeInfo, pattern, thousand, decimal, type) {\n    this.localeInfo = localeInfo;\n    this.pattern = pattern;\n    this.thousandDelimiter = thousand || ',';\n    this.decimalDelimiter = decimal || '.';\n    this.type = type || 'numeric';\n\n    this.prepare();\n  }\n\n  clone() {\n    const n = new NumberFormatter(this.localeInfo, this.pattern, this.thousandDelimiter, this.decimalDelimiter, this.type);\n    n.subtype = this.subtype;\n    return n;\n  }\n\n  /**\n   * Formats a number according to a specific pattern.\n   * Use # for optional numbers and 0 for padding.\n   * @param {Number} value Number to format.\n   * @param {String} [pattern] The pattern to apply.\n   * @param {String} [t] Grouping separator.\n   * @param {String} [d] Decimal delimiter.\n   * @example\n   * format(10, \"0\") // 10;\n   * format(10, \"#\") // 10;\n   * format(10, \"##.#\") // 10;\n   * format(10, \"##.0\") // 10.0;\n   * format(10, \"000\") // 010;\n   * format(10.123, \"0.0\") // 10.1;\n   * format(10.123, \"0.00##\") // 10.123; // at least 2 decimals, never more than 4\n   * format(123456789, \"#,###\") // 123,456,789;\n   * format(123456789, \"####-####\", \"-\") // 1-2345-6789;\n   * format(10000, \"#A\") // 10k,  A -> SI abbreviation\n   * format(1234567, \"#.###A\") // 1.235M;\n   * format(0.0001, \"#.#A\") // 0.1m;\n   *\n   * format(0.257, \"0.0%\") // 25.7%; // will multiply by 100\n   * format(9876, \"$#,###\") // $9,876;\n   * format(-9876, \"$#,###;$(#,###)\") // $(9,876); // use ; for alternative formatting for negative values\n   * format(10, \"(r16)\") // a; // radix 16\n   * format(15, \"(hex)\") // f; // same as (r16)\n   * format(15, \"(HEX)\") // F;\n   * format(10, \"(bin)\") // 1010; // same as (r02)\n   * format(10, \"(oct)\") // 12; // same as (r08)\n   */\n  format(value, pattern, t, d) {\n    this.prepare(pattern, t, d);\n    return this.formatValue(value);\n  }\n\n  prepare(pattern, t, d) {\n    let prep;\n\n    if (typeof pattern === 'undefined') { pattern = this.pattern; }\n    if (typeof t === 'undefined') { t = this.thousandDelimiter; }\n    if (typeof d === 'undefined') { d = this.decimalDelimiter; }\n\n\n    if (!pattern) {\n      this._prepared = { pattern: false };\n      return;\n    }\n\n    this._prepared = {\n      positive: {\n        d,\n        t,\n        abbreviate: false,\n        isFunctional: false,\n        prefix: '',\n        postfix: ''\n      },\n      negative: {\n        d,\n        t,\n        abbreviate: false,\n        isFunctional: false,\n        prefix: '',\n        postfix: ''\n      },\n      zero: {\n        d,\n        t,\n        abbreviate: false,\n        isFunctional: false,\n        prefix: '',\n        postfix: ''\n      }\n    };\n    prep = this._prepared;\n\n    // TODO FIXME qListSep?\n    // const patternSeparator = this.localeInfo && this.localeInfo.qListSep ? this.localeInfo.qListSep : ';';\n    const patternSeparator = ';';\n\n    pattern = pattern.split(patternSeparator);\n    prep.positive.pattern = pattern[0];\n    prep.negative.pattern = pattern[1];\n    prep.zero.pattern = pattern[2];\n    if (functional.test(pattern[0])) {\n      prep.positive.isFunctional = true;\n    }\n    if (!pattern[1]) {\n      prep.negative = false;\n    } else if (functional.test(pattern[1])) {\n      prep.negative.isFunctional = true;\n    }\n    if (!pattern[2]) {\n      prep.zero = false;\n    } else if (functional.test(pattern[2])) {\n      prep.zero.isFunctional = true;\n    }\n\n    if (!prep.positive.isFunctional) {\n      preparePattern(prep.positive, t, d);\n    }\n    if (prep.negative && !prep.negative.isFunctional) {\n      preparePattern(prep.negative, t, d);\n    }\n    if (prep.zero && !prep.zero.isFunctional) {\n      preparePattern(prep.zero, t, d);\n    }\n  }\n\n  formatValue(value) {\n    let prep = this._prepared,\n      temp,\n      exponent,\n      abbr = '',\n      absValue,\n      num,\n      sciValue = '',\n      d,\n      t,\n      i,\n      numericPattern,\n      decimalPartPattern,\n      original = value;\n\n    if (isNaN(value)) {\n      return `${original}`;\n    }\n\n    value = +value;\n\n    if (prep.pattern === false) {\n      return value.toString();\n    }\n\n    if (value === 0 && prep.zero) {\n      prep = prep.zero;\n      return prep.pattern;\n    } else if (value < 0 && prep.negative) {\n      prep = prep.negative;\n      value = -value;\n    } else {\n      prep = prep.positive;\n    }\n    d = prep.d;\n    t = prep.t;\n\n    if (prep.isFunctional) {\n      value = formatFunctional(value, prep.pattern, d);\n    } else {\n      if (prep.percentage) {\n        value *= 100;\n      }\n\n      if (prep.abbreviate) {\n        exponent = Number(Number(value).toExponential().split('e')[1]);\n        exponent -= (exponent % 3);\n        if (exponent in SIprefixes) {\n          abbr = SIprefixes[exponent];\n          value /= Math.pow(10, exponent);\n        }\n      }\n\n      absValue = Math.abs(value);\n      temp = prep.temp;\n      numericPattern = prep.numericPattern;\n      decimalPartPattern = numericPattern.split(d)[1];\n\n      if (this.type === 'I') {\n        value = Math.round(value);\n      }\n      num = value;\n\n      if (!decimalPartPattern && numericPattern.slice(-1)[0] === '#') {\n        if (absValue >= Math.pow(10, temp) || absValue < 1 || absValue < 1e-4) {\n          if (value === 0) {\n            value = '0';\n          } else if (absValue < 1e-4 || absValue >= 1e20) { // engine always formats values < 1e-4 in scientific form, values >= 1e20 can only be represented in scientific form\n            value = num.toExponential(Math.max(1, Math.min(14, temp)) - 1);\n            value = value.replace(/\\.?0+(?=e)/, '');\n            sciValue = '';\n          } else {\n            value = value.toPrecision(Math.max(1, Math.min(14, temp)));\n            if (value.indexOf('.') >= 0) {\n              value = value.replace(value.indexOf('e') < 0 ? /0+$/ : /\\.?0+(?=e)/, '');\n              value = value.replace('.', d);\n            }\n          }\n        } else {\n          numericPattern += d;\n          temp = Math.max(0, Math.min(20, temp - Math.ceil(Math.log(absValue) / Math.log(10))));\n          for (i = 0; i < temp; i++) {\n            numericPattern += '#';\n          }\n\n          value = formatter(numericPattern, value);\n        }\n      } else if (absValue >= 1e15 || (absValue > 0 && absValue <= 1e-14)) {\n        value = absValue ? absValue.toExponential(15).replace(/\\.?0+(?=e)/, '') : '0';\n      } else {\n        const wholePart = Number((value.toFixed(Math.min(20, decimalPartPattern ? decimalPartPattern.length : 0))).split('.')[0]);\n        let wholePartPattern = numericPattern.split(d)[0];\n        wholePartPattern += d;\n\n        value = formatter(wholePartPattern, wholePart) || '0';\n\n        if (decimalPartPattern) {\n          const nDecimals = Math.max(0, Math.min(14, decimalPartPattern.length)); // the length of e.g. 0000#####\n          const nZeroes = decimalPartPattern.replace(/#+$/, '').length;\n          let decimalPart = (this.type === 'I' ? 0 : absValue % 1).toFixed(nDecimals).slice(2).replace(/0+$/, ''); // remove trailing zeroes\n\n          for (i = decimalPart.length; i < nZeroes; i++) {\n            decimalPart += '0';\n          }\n\n          if (decimalPart) {\n            value += d + decimalPart;\n          }\n        } else if (wholePart === 0) { // to avoid \"-\" being prefixed to value\n          num = 0;\n        }\n      }\n\n      value = value.replace(prep.numericRegex, (m) => {\n        if (m === t) {\n          return prep.groupTemp;\n        } else if (m === d) {\n          return prep.decTemp;\n        }\n        return '';\n      });\n      if (num < 0 && !/^-/.test(value)) {\n        value = `-${value}`;\n      }\n    }\n\n    return prep.prefix + value + sciValue + abbr + prep.postfix;\n  }\n\n  static getStaticFormatter() {\n    return { prepare() { }, formatValue(v) { return `${v}`; } };\n  }\n}\n\nexport default function numberFormatFactory(...args) {\n  return new NumberFormatter(...args);\n}\n","import numberFormatFactory from './parts/qs-number-formatter';\n\nexport default function formatter(pattern, thousand, decimal, qType, localeInfo) {\n  const qformat = numberFormatFactory(localeInfo, pattern, thousand, decimal, qType);\n\n  /**\n   * Format a value according to the specified pattern created at construct\n   *\n   * @param  {Number} value   The number to be formatted\n   * @return {String}         [description]\n   */\n  function format(value) {\n    return qformat.formatValue(value);\n  }\n\n   /**\n    * Format a value according to a specific pattern\n    * that is not the one specified in the constructor\n    *\n    * @param  {String} p   Pattern\n    * @param  {Number} v   Value\n    * @param  {String} t   Thousand\n    * @param  {String} d   Decimal\n    * @return {String}     Formatted value\n    */\n  format.format = function formatFn(p, v, t, d) {\n    return qformat.format(v, p, t, d);\n  };\n\n   /**\n    * Change the pattern on existing formatter\n    *\n    * @param  {String} p     Pattern (optional)\n    * @return {String}       Returns the pattern\n    */\n  format.pattern = function patternFn(p) {\n    if (p) {\n      qformat.pattern = p;\n      qformat.prepare();\n    }\n    return qformat.pattern;\n  };\n\n  /**\n   * Set the locale for the formatter\n   *\n   * @param  {Object} args   Locale object for formatting\n   * @return {Undefined}      Returns nothing\n   */\n  /* format.locale = function( ...args ) {\n    locale = formatLocale( ...args );\n    d3format = locale.format( pattern );\n\n    return this;\n  };*/\n\n  return format;\n}\n","import { TYPES } from '../timeFormat';\n\nconst DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nconst DAYS_ABBR = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\nconst MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nconst MONTHS_ABBR = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nfunction pad(s, n) {\n  for (let i = s.length; i < n; i++) {\n    s = `0${s}`;\n  }\n  return s;\n}\n\nfunction parseDate(d, twelveFormat) {\n  let h = d.getHours();\n  let day = d.getDay() - 1;\n  if (twelveFormat) {\n    h %= 12;\n    if (!h) { // h == 0 -> 12\n      h = 12;\n    }\n  }\n\n  if (day < 0) {\n    day = 6;\n  }\n\n  return {\n    year: d.getFullYear(),\n    month: d.getMonth(),\n    day,\n    date: d.getDate(),\n    h,\n    m: d.getMinutes(),\n    s: d.getSeconds(),\n    f: d.getMilliseconds(),\n    t: d.getHours() >= 12 ? 'pm' : 'am'\n  };\n}\n\nfunction getRemainder(value) {\n  let s = value.toString().split('.');\n  if (s[1]) {\n    s = Number(`0.${s[1]}`);\n  } else {\n    return 0;\n  }\n  return s;\n}\n\nfunction parseIntervalDays(days) {\n  const d = days;\n  const h = 24 * getRemainder(d);\n  const m = 60 * getRemainder(h);\n  const s = 60 * getRemainder(m);\n  const ms = 1000 * getRemainder(s);\n\n  return {\n    d: Math.floor(d),\n    h: Math.floor(h),\n    m: Math.floor(m),\n    s: Math.floor(s),\n    f: Math.round(ms)\n  };\n}\n\nfunction parseInterval(days, pattern) {\n  let units = parseIntervalDays(days),\n    d = units.d,\n    h = units.h,\n    m = units.m,\n    s = units.s,\n    f = units.f,\n    w = 0,\n    date;\n\n  if (/w+|t+/gi.test(pattern)) {\n    date = new Date(1899, 11, 30 + Math.floor(days), 0, 0, 24 * 60 * 60 * (days - Math.floor(days)));\n    if (isNaN(date.getTime())) {\n      date = null;\n    }\n  }\n\n  if (!/D+/gi.test(pattern)) {\n    h += d * 24;\n  }\n  if (!/h+/gi.test(pattern)) {\n    m += h * 60;\n  }\n  if (!/m+/gi.test(pattern)) {\n    s += m * 60;\n  }\n  if (/w+/gi.test(pattern)) {\n    w = date ? date.getDay() - 1 : 0;\n    if (w < 0) {\n      w = 6;\n    }\n  }\n\n  let someT = '';\n  if (date) {\n    someT = date.getHours() >= 12 ? 'pm' : 'am';\n  }\n\n  return {\n    year: 0,\n    month: 0,\n    day: w,\n    date: d,\n    h,\n    m,\n    s,\n    f,\n    t: someT\n  };\n}\n\nfunction getMasks(inst, d) {\n  return {\n    'Y+|y+': {\n      Y: `${Number((`${d.year}`).slice(-2))}`,\n      YY: pad((`${d.year}`).slice(-2), 2),\n      YYY: pad((`${d.year}`).slice(-3), 3),\n      def(m) { // default\n        return pad((`${d.year}`), m.length);\n      }\n    },\n    'M+': {\n      M: d.month + 1,\n      MM: pad(`${d.month + 1}`, 2),\n      MMM: inst.locale_months_abbr[d.month],\n      def: inst.locale_months[d.month]\n    },\n    'W+|w+': {\n      W: d.day,\n      WW: pad(`${d.day}`, 2),\n      WWW: inst.locale_days_abbr[d.day],\n      def: inst.locale_days[d.day]\n    },\n    'D+|d+': {\n      D: d.date,\n      def(m) {\n        return pad(`${d.date}`, m.length);\n      }\n    },\n    'h+|H+': {\n      h: d.h,\n      def(m) { return pad(`${d.h}`, m.length); }\n    },\n    'm+': {\n      m: d.m,\n      def(m) { return pad(`${d.m}`, m.length); }\n    },\n    's+|S+': {\n      s: d.s,\n      def(m) { return pad(`${d.s}`, m.length); }\n    },\n    'f+|F+': {\n      def(m) {\n        let f = `${d.f}`,\n          n = m.length - f.length;\n        if (n > 0) {\n          for (let i = 0; i < n; i++) {\n            f += '0';\n          }\n        } else if (n < 0) {\n          f = f.slice(0, m.length);\n        }\n        return f;\n      }\n    },\n    't{1,2}|T{1,2}': {\n      def(m) {\n        let t = d.t;\n        if (m[0].toUpperCase() === m[0]) {\n          t = t.toUpperCase();\n        }\n        t = t.slice(0, m.length);\n        return t;\n      }\n    }\n  };\n}\n\nclass DateFormatter {\n  /**\n   * @name DateFormatter\n   * @constructs\n   * @param {Object} localeInfo\n   * @param {String} pattern\n   */\n  constructor(localeInfo, pattern, qtype) {\n    const info = localeInfo || {};\n\n    if (!info.qCalendarStrings) {\n      info.qCalendarStrings = {\n        qLongDayNames: DAYS,\n        qDayNames: DAYS_ABBR,\n        qLongMonthNames: MONTHS,\n        qMonthNames: MONTHS_ABBR\n      };\n    }\n\n    this.localeInfo = info;\n    this.locale_days = info.qCalendarStrings.qLongDayNames.slice();\n    this.locale_days_abbr = info.qCalendarStrings.qDayNames.slice();\n    this.locale_months = info.qCalendarStrings.qLongMonthNames.slice();\n    this.locale_months_abbr = info.qCalendarStrings.qMonthNames.slice();\n\n    if (!pattern) {\n      const patternMap = {\n        [TYPES.TIME]: info.qTimeFmt || 'hh:mm:ss',\n        [TYPES.DATE]: info.qDateFmt || 'YYYY-MM-DD',\n        [TYPES.DATE_TIME]: info.qTimestampFmt || 'YYYY-MM-DD hh:mm:ss'\n      };\n\n      pattern = patternMap[qtype];\n    }\n\n    this.pattern = pattern;\n  }\n\n  clone() {\n    const n = new DateFormatter(this.localeInfo, this.pattern);\n    n.subtype = this.subtype;\n    return n;\n  }\n\n  /**\n   * Formats a date according to given pattern\n   * @param {Date} date The date to format.\n   * @param {String} pattern The desired format of the date\n   * var d = new Date(2013, 8, 15, 13, 55, 40, 987);\n   * var n = new DateFormatter();\n   * @example\n   * m.format( d, 'YYYY-MM-DD hh:mm:ss.ffff') // 2013-08-15 13:55:40.9870\n   * m.format( d, 'h:m:s tt') // 1:55:40 pm\n   * m.format( d, 'h:m:s TT') // 1:55:40 PM\n   * m.format( d, 'M/D/YYYY') // 8/15/2013\n   * m.format( d, 'WWWW DD MMM') // Thursday 15 Aug\n   * m.format( d, 'WWW DD MMMM @ hh:mm:ss') // Thu 15 August @ 13:55:40\n   */\n  format(date, pattern) {\n    // Fallback pattern is set in constructor\n    if (!pattern) {\n      pattern = this.pattern ? this.pattern : 'YYYY-MM-DD hh:mm:ss';\n    }\n\n    pattern = pattern.replace(/\\[.+]|\\[|]/g, '');\n    const hasTwelveFlag = /t+/ig.test(pattern);\n    let parsedDate;\n\n    if (date instanceof Date) {\n      parsedDate = parseDate(date, hasTwelveFlag);\n    } else {\n      if (date < 0) {\n        // parseInterval don't support for negative values\n        date = -date;\n        pattern = `-${pattern}`;\n      }\n      parsedDate = parseInterval(date, pattern);\n    }\n    // remove [] and everything inside it\n\n    const masks = getMasks(this, parsedDate);\n\n    const masksArr = [];\n    for (const mask in masks) {\n      if (Object.prototype.hasOwnProperty.call(masks, mask)) {\n        masksArr.push(mask);\n      }\n    }\n    const dateTimeRegex = new RegExp(masksArr.join('|'), 'g');\n\n    const result = pattern.replace(dateTimeRegex, (m) => {\n      let r;\n      let mask;\n      for (mask in masks) {\n        if (Object.prototype.hasOwnProperty.call(masks, mask)) {\n          r = new RegExp(mask);\n          if (r.test(m)) {\n            break;\n          }\n        }\n      }\n      if (!r) {\n        return '';\n      }\n      let value;\n      for (const submask in masks[mask]) {\n        if (submask === m || submask.toLowerCase() === m) {\n          value = masks[mask][submask];\n          if (typeof value === 'undefined') {\n            value = masks[mask][submask.toLowerCase()];\n          }\n          break;\n        }\n      }\n      if (typeof value === 'undefined') {\n        value = masks[mask].def;\n      }\n\n      if (typeof value === 'function') {\n        value = value(m);\n      }\n      return value;\n    });\n    return result;\n  }\n}\n\nexport default function dateFormatFactory(...args) {\n  return new DateFormatter(...args);\n}\n","import dateFormatFactory from './parts/qs-date-formatter';\n\nexport function QlikTimeToDate(value) {\n  return new Date(1899, 11, 30 + Math.floor(value), 0, 0, 0, 1000 * 24 * 60 * 60 * (value - Math.floor(value)));\n}\n\nexport const TYPES = {\n  AUTO: 'U',\n  INTEGER: 'I',\n  NUMBER: 'R',\n  FIXED_TO: 'F',\n  MONEY: 'M',\n  DATE: 'D',\n  TIME: 'T',\n  DATE_TIME: 'TS',\n  INTERVAL: 'IV'\n};\n\nexport default function formatter(pattern, qtype = 'TS', localeInfo = null) {\n  let qformat = dateFormatFactory(localeInfo, pattern, qtype);\n\n  /**\n   * Prepare a value according to the specified qtype\n   *\n   * @param  {Number} value The value to be formatted\n   * @return {Number}       The converted value (if applied)\n   */\n  function prepare(value) {\n    if (qtype !== TYPES.INTERVAL) {\n      return QlikTimeToDate(value);\n    }\n    return value;\n  }\n\n  /**\n   * Format a value according to the specified pattern created at construct\n   *\n   * @param  {Date} value   The number to be formatted\n   * @return {String}         [description]\n   */\n  function format(value) {\n    value = prepare(value);\n    return qformat.format(value);\n  }\n\n   /**\n    * Format a value according to a specific pattern\n    * that is not the one specified in the constructor\n    *\n    * @param  {String} p   Pattern\n    * @param  {Date} v   Value\n    * @return {String}     Formatted value\n    */\n  format.format = function formatFn(p, v) {\n    v = prepare(v);\n    return qformat.format(v, p);\n  };\n\n  /**\n   * Set the locale for the formatter\n   *\n   * @param  {Object} args   Locale object for formatting\n   * @return {Undefined}      Returns nothing\n   */\n  format.locale = function locale(li) {\n    qformat = dateFormatFactory(li, pattern, qtype);\n\n    return this;\n  };\n\n  /**\n   * Get or set the QType\n   *\n   * @param  {String} nqt New qType (optional)\n   * @return {String}     Current qtype\n   */\n  format.qtype = function qtypeFn(nqt) {\n    if (nqt !== undefined) {\n      qtype = nqt;\n    }\n    return qtype;\n  };\n\n  return format;\n}\n","import numberFormat from './numberFormat';\nimport timeFormat from './timeFormat';\n\nexport {\n  numberFormat,\n  timeFormat\n};\n\nexport function createFromMetaInfo(meta, localeInfo) {\n  if (meta && meta.qNumFormat && ['D', 'T', 'TS', 'IV'].indexOf(meta.qNumFormat.qType) !== -1) {\n    return timeFormat(meta.qNumFormat.qFmt, meta.qNumFormat.qType, localeInfo);\n  }\n  let pattern = '#';\n  let thousand = localeInfo && typeof localeInfo.qThousandSep !== 'undefined' ? localeInfo.qThousandSep : ',';\n  let decimal = localeInfo && typeof localeInfo.qDecimalSep !== 'undefined' ? localeInfo.qDecimalSep : '.';\n  let type = 'U';\n  let isAuto = meta && !!meta.qIsAutoFormat;\n  if (meta && meta.qNumFormat) {\n    pattern = meta.qNumFormat.qFmt || pattern;\n    thousand = meta.qNumFormat.qThou || thousand;\n    decimal = meta.qNumFormat.qDec || decimal;\n    type = meta.qNumFormat.qType || type;\n    isAuto = isAuto && ['M'].indexOf(meta.qNumFormat.qType) === -1;\n  }\n\n  if (isAuto) {\n    pattern = `#${decimal}##A`;\n    type = 'U';\n  }\n\n  return numberFormat(pattern, thousand, decimal, type, localeInfo);\n}\n","import { createFromMetaInfo } from '../formatter';\n\n// const tagsFn = d => d.qTags;\nconst elemNoFn = cube => (cube.qMode === 'S' ? (d => d.qElemNumber) : (d => d.qElemNo));\nconst measureValue = cube => (cube.qMode === 'S' ? (d => d.qNum) : (d => d.qValue));\n\nexport default function qField({\n  meta,\n  id,\n  key,\n  cube,\n  localeInfo,\n  fieldExtractor,\n  value\n } = {}) {\n  let values;\n\n  const type = ('qStateCounts' in meta || 'qSize' in meta) ? 'dimension' : 'measure';\n  const valueFn = value || (type === 'dimension' ? elemNoFn(cube) : measureValue(cube));\n  const labelFn = d => d.qText || '';\n  const reduce = type === 'dimension' ? 'first' : 'avg';\n  const formatter = createFromMetaInfo(meta, localeInfo);\n\n  const f = {\n    id: () => id,\n    key: () => key,\n    raw: () => meta,\n    title: () => meta.qFallbackTitle || meta.label,\n    type: () => type,\n    items: () => {\n      if (!values) {\n        values = fieldExtractor(f);\n      }\n      return values;\n    },\n    min: () => meta.qMin,\n    max: () => meta.qMax,\n    value: valueFn,\n    label: labelFn,\n    reduce,\n    formatter: () => formatter,\n    tags: () => meta.qTags\n  };\n\n  return f;\n}\n","import augmentH from './augment-hierarchy';\nimport kExtractor from './extractor-k';\nimport SExtractor from './extractor-s';\nimport { findField } from './util';\nimport field from './field';\n\nfunction hierarchy(config = {}, dataset, cache, deps) {\n  const cube = dataset.raw();\n  if (!cube.qMode === 'K') {\n    return null;\n  }\n  return augmentH(config, dataset, cache, deps);\n}\n\nfunction extractData(cfg, dataset, cache, deps) {\n  const cube = dataset.raw();\n  if (cube.qMode === 'K') {\n    return kExtractor(cfg, dataset, cache, deps);\n  } else if (cube.qMode === 'S') {\n    return SExtractor(cfg, dataset, cache, deps);\n  }\n  return [];\n}\n\nfunction createAttrFields(idx, d, {\n  cache,\n  cube,\n  pages,\n  fieldExtractor,\n  key,\n  fieldKey\n}) {\n  if (d.qAttrDimInfo) {\n    cache.attributeDimensionFields[idx] = d.qAttrDimInfo.map((attrDim, i) => (attrDim ? field({\n      meta: attrDim,\n      id: `${key}/${fieldKey}/qAttrDimInfo/${i}`,\n      key: `${fieldKey}/qAttrDimInfo/${i}`,\n      cube,\n      pages,\n      fieldExtractor,\n      value: v => v.qElemNo\n    }) : undefined));\n  }\n  if (d.qAttrExprInfo) {\n    cache.attributeExpressionFields[idx] = d.qAttrExprInfo.map((attrExpr, i) => (attrExpr ? field({\n      meta: attrExpr,\n      id: `${key}/${fieldKey}/qAttrExprInfo/${i}`,\n      key: `${fieldKey}/qAttrExprInfo/${i}`,\n      cube,\n      pages,\n      fieldExtractor\n    }) : undefined));\n  }\n}\n\nexport default function q({\n  key,\n  data\n} = {}) {\n  const cache = {\n    attributeDimensionFields: [],\n    attributeExpressionFields: [],\n    fields: []\n  };\n\n  const cube = data;\n\n  if (!cube.qDimensionInfo) { // assume old data format\n    throw new Error('The data input is not recognized as a hypercube');\n  }\n\n  const pages = cube.qMode === 'K' ? cube.qStackedDataPages : cube.qDataPages;\n\n  const deps = q.util;\n\n  const dataset = {\n    key: () => key,\n    raw: () => cube,\n    field: query => findField(query, {\n      cache,\n      cube,\n      pages\n    }),\n    fields: () => cache.fields.slice(),\n    extract: extractionConfig => extractData(extractionConfig, dataset, cache, deps),\n    hierarchy: hierarchyConfig => hierarchy(hierarchyConfig, dataset, cache, deps)\n  };\n\n  let fieldExtractor;\n\n  if (cube.qMode === 'K') {\n    fieldExtractor = f => kExtractor({ field: f }, dataset, cache, deps);\n  } else if (cube.qMode === 'S') {\n    fieldExtractor = f => SExtractor({ field: f }, dataset, cache, deps);\n  } else {\n    fieldExtractor = () => []; // TODO - throw unsupported error?\n  }\n\n  const dimensions = cube.qDimensionInfo;\n  dimensions.forEach((d, i) => {\n    const fieldKey = `qDimensionInfo/${i}`;\n    cache.fields.push(field({\n      meta: d,\n      id: `${key}/${fieldKey}`,\n      key: fieldKey,\n      cube,\n      pages,\n      fieldExtractor\n    }));\n    createAttrFields(i, d, { cache, cube, pages, fieldExtractor, key, fieldKey });\n  });\n\n  cube.qMeasureInfo.forEach((d, i) => {\n    const fieldKey = `qMeasureInfo/${i}`;\n    cache.fields.push(field({\n      meta: d,\n      id: `${key}/${fieldKey}`,\n      key: fieldKey,\n      cube,\n      pages,\n      fieldExtractor\n    }));\n    createAttrFields(dimensions.length + i, d, { cache, cube, pages, fieldExtractor, key, fieldKey });\n  });\n\n  return dataset;\n}\n","import resolve from '../json-path-resolver';\n\nconst LAYOUT_TO_PROP = [\n  ['qHyperCube', 'qHyperCubeDef'],\n  ['qDimensionInfo', 'qDimensions'],\n  ['qMeasureInfo', 'qMeasures'],\n  ['qAttrDimInfo', 'qAttributeDimensions'],\n  ['qAttrExprInfo', 'qAttributeExpressions']\n];\n\n\nconst DIM_RX = /\\/qDimensionInfo(?:\\/(\\d+))?/;\nconst M_RX = /\\/qMeasureInfo\\/(\\d+)/;\nconst ATTR_DIM_RX = /\\/qAttrDimInfo\\/(\\d+)(?:\\/(\\d+))?/;\nconst ATTR_EXPR_RX = /\\/qAttrExprInfo\\/(\\d+)/;\n\nexport function extractFieldFromId(id, layout) {\n  let isDimension = false;\n  let index = 0;\n  let path = id;\n  const pathToHC = `${path.substr(0, path.indexOf('qHyperCube') + 10)}`; // 10 = length of 'qHyperCube'\n\n  let shortenPath = true;\n\n  if (DIM_RX.test(id)) {\n    index = +DIM_RX.exec(id)[1];\n    const attr = id.replace(DIM_RX, '');\n    isDimension = true;\n    if (ATTR_DIM_RX.test(attr)) {\n      index = 0; // default to 0\n      const attrDimColIdx = +ATTR_DIM_RX.exec(path)[2];\n      if (!isNaN(attrDimColIdx)) { // use column index if specified\n        index = attrDimColIdx;\n        path = path.replace(/\\/\\d+$/, '');\n      }\n      shortenPath = false;\n    } else if (ATTR_EXPR_RX.test(attr)) {\n      // attrIdx depends on number of measures + number of attr expressions\n      // in dimensions before this one\n      let attrIdx = 0;\n      if (layout) {\n        const hc = resolve(pathToHC, layout);\n\n        // offset by number of measures\n        attrIdx += hc.qMeasureInfo.length;\n\n        // offset by total number of attr expr in dimensions\n        // (assuming attr expr in dimensions are ordered first)\n        attrIdx = hc.qDimensionInfo\n          .slice(0, index)\n          .reduce((v, dim) => v + dim.qAttrExprInfo.length, attrIdx);\n\n        // offset by the actual column value for the attribute expression itself\n        attrIdx += +ATTR_EXPR_RX.exec(path)[1];\n\n        index = attrIdx;\n        isDimension = false;\n      }\n    }\n  } else if (M_RX.test(id)) {\n    index = +M_RX.exec(id)[1];\n    isDimension = false;\n    const attr = id.replace(M_RX, '');\n    if (ATTR_DIM_RX.test(attr)) {\n      index = 0; // default to 0\n      const attrDimColIdx = +ATTR_DIM_RX.exec(path)[2];\n      if (!isNaN(attrDimColIdx)) { // use column index if specified\n        index = attrDimColIdx;\n        path = path.replace(/\\/\\d+$/, '');\n      }\n      shortenPath = false;\n      isDimension = true;\n    } else if (ATTR_EXPR_RX.test(attr)) {\n      // depends on number of measures + number of attr expressions\n      // in dimensions and measures before this one\n      let attrIdx = 0;\n      if (layout) {\n        const hc = resolve(pathToHC, layout);\n\n        // offset by number of measures\n        attrIdx += hc.qMeasureInfo.length;\n\n        // offset by total number of attr expr in dimensions\n        // (assuming attr expr in dimensions are ordered first)\n        attrIdx = hc.qDimensionInfo.reduce((v, dim) => v + dim.qAttrExprInfo.length, attrIdx);\n\n        // offset by total number of attr expr in measures before 'index'\n        attrIdx = hc.qMeasureInfo\n          .slice(0, index)\n          .reduce((v, meas) => v + meas.qAttrExprInfo.length, attrIdx);\n\n        // offset by the actual column value for the attribute expression itself\n        attrIdx += +ATTR_EXPR_RX.exec(path)[1];\n\n        index = attrIdx;\n      }\n    }\n  }\n\n  LAYOUT_TO_PROP.forEach(([v, prop]) => {\n    path = path.replace(v, prop);\n  });\n\n  if (shortenPath) {\n    path = `${path.substr(0, path.indexOf('/qHyperCubeDef') + 14)}`; // 14 = length of '/qHyperCubeDef'\n  }\n\n  if (path && path[0] !== '/') {\n    path = `/${path}`;\n  }\n\n  return {\n    index,\n    path,\n    type: isDimension ? 'dimension' : 'measure'\n  };\n}\n\n/**\n * Helper method to generate suitable QIX selection methods and parameters based on a brush instance.\n * @alias brush\n * @memberof picasso.q\n * @param {brush} brush A brush instance\n * @param {object} [opts]\n * @param {boolean} [opts.byCells=false] Whether to prefer selection by row index.\n * @param {string} [opts.primarySource] Field source to extract row indices from. If not specified, indices from first source are used.\n * @param {object} [layout] QIX data layout. Needed only when brushing on attribute expressions, to be able to calculate the measure index.\n * @return {object[]} An array of relevant selections\n */\nexport default function qBrush(brush, opts = {}, layout) {\n  const byCells = opts.byCells;\n  const primarySource = opts.primarySource;\n  const selections = [];\n  const methods = {};\n  const isActive = brush.isActive();\n  let hasValues = false;\n  brush.brushes().forEach((b) => {\n    const info = extractFieldFromId(b.id, layout);\n    if (b.type === 'range' && info.type === 'measure') {\n      const ranges = b.brush.ranges();\n      if (ranges.length) {\n        hasValues = true;\n        if (!methods.rangeSelectHyperCubeValues) {\n          methods.rangeSelectHyperCubeValues = {\n            path: info.path,\n            ranges: []\n          };\n        }\n        ranges.forEach(range => methods.rangeSelectHyperCubeValues.ranges.push({\n          qMeasureIx: info.index,\n          qRange: {\n            qMin: range.min,\n            qMax: range.max,\n            qMinInclEq: true,\n            qMaxInclEq: true\n          }\n        }));\n      }\n    }\n    if (b.type === 'range' && info.type === 'dimension') {\n      const ranges = b.brush.ranges();\n      if (ranges.length) {\n        hasValues = true;\n        if (!methods.selectHyperCubeContinuousRange) {\n          methods.selectHyperCubeContinuousRange = {\n            path: info.path,\n            ranges: []\n          };\n        }\n        ranges.forEach(range => methods.selectHyperCubeContinuousRange.ranges.push({\n          qDimIx: info.index,\n          qRange: {\n            qMin: range.min,\n            qMax: range.max,\n            qMinInclEq: true,\n            qMaxInclEq: false\n          }\n        }));\n      }\n    }\n    if (b.type === 'value' && info.type === 'dimension') {\n      if (byCells) {\n        if (!methods.selectHyperCubeCells) {\n          methods.selectHyperCubeCells = {\n            path: info.path,\n            cols: []\n          };\n        }\n\n        methods.selectHyperCubeCells.cols.push(info.index);\n        if (b.id === primarySource || (!primarySource && !methods.selectHyperCubeCells.values)) {\n          methods.selectHyperCubeCells.values = b.brush.values()\n            .map(s => +s)\n            .filter(v => !isNaN(v));\n          hasValues = !!methods.selectHyperCubeCells.values.length;\n        }\n      } else {\n        const values = b.brush.values().map(s => +s).filter(v => !isNaN(v));\n        hasValues = !!values.length;\n        selections.push({\n          params: [info.path, info.index, values, false],\n          method: 'selectHyperCubeValues'\n        });\n      }\n    }\n  });\n\n  if (!hasValues && isActive) {\n    return [{\n      method: 'resetMadeSelections',\n      params: []\n    }];\n  }\n\n  if (methods.rangeSelectHyperCubeValues) {\n    selections.push({\n      method: 'rangeSelectHyperCubeValues',\n      params: [methods.rangeSelectHyperCubeValues.path, methods.rangeSelectHyperCubeValues.ranges, [], true]\n    });\n  }\n\n  if (methods.selectHyperCubeContinuousRange) {\n    selections.push({\n      method: 'selectHyperCubeContinuousRange',\n      params: [methods.selectHyperCubeContinuousRange.path, methods.selectHyperCubeContinuousRange.ranges]\n    });\n  }\n\n  if (methods.selectHyperCubeCells) {\n    selections.push({\n      method: 'selectHyperCubeCells',\n      params: [\n        methods.selectHyperCubeCells.path,\n        methods.selectHyperCubeCells.values,\n        methods.selectHyperCubeCells.cols\n      ]\n    });\n  }\n\n  return selections;\n}\n","import data from './data/dataset';\nimport qBrushHelper from './brush/q-brush';\n// import qTime from './scales/qTime';\n\nexport default function initialize(picasso) {\n  data.util = picasso.data('matrix').util;\n  picasso.data('q', data);\n  // picasso.scale('qTime', qTime);\n}\n\ninitialize.qBrushHelper = qBrushHelper; // deprecated\ninitialize.selections = qBrushHelper;\n"],"names":["resolve","path","obj","charAt","substring","arr","split","subpath","container","i","length","Array","isArray","carr","slice","join","c","v","push","getKPath","fieldIdx","cube","idx","numDimz","qDimensionInfo","numMeas","qMeasureInfo","order","qEffectiveInterColumnSortOrder","indexOf","s","depth","Math","max","min","getAttrPath","attrIdx","attrDimIdx","getPathToFieldItems","field","cache","fields","attributeDimensionFields","attributeExpressionFields","undefined","getTreePath","s1","s2","replace","s3","augment","config","dataset","deps","rootPath","raw","root","picker","h","hierarchy","children","node","qSubNodes","height","propDefs","normalizeConfig","props","main","propsArr","Object","keys","currentField","isRoot","currentItemsPath","forEach","prop","pCfg","p","fieldPath","isSame","isDescendant","match","pathToNode","ceil","originalData","expando","each","currentOriginal","data","value","coll","fn","type","n","map","reduce","num","it","parent","source","flattenTree","steps","arrIndexAtTargetDepth","nodes","treeAccessor","sourceDepth","targetDepth","Function","d","String","prototype","valueOf","findField","query","allFields","key","title","Error","DIM_RX","M_RX","ATTR_EXPR_RX","ATTR_DIM_RX","getFieldDepth","isFieldDimension","fieldDepth","pseudoMeasureIndex","remainder","test","exec","treeOrder","getFieldAccessor","sourceDepthObject","targetDepthObject","nodeFn","attrFn","qAttrDims","qValues","qAttrExps","datumExtract","propCfg","cell","datum","label","extract","util","cfgs","dataItems","cfg","sourceKey","f","babelHelpers.typeof","tree","itemDepthObject","track","trackBy","trackType","tracker","trackedItems","items","depthObject","accessors","accessor","attrAccessor","mapped","item","itemData","exclude","filter","ret","collect","page","qArea","qLeft","qWidth","cellToValue","mainCell","rowIdx","row","target","targetProp","propCell","propCellFn","extend","qRow","qDataPages","qMatrix","qTop","pp","fidx","fieldValues","fieldLabels","define","this","escapeRegExp","str","SIprefixes","percentage","radix","oct","dec","hex","bin","rom","functional","formatRadix","fradix","pattern","decimal","toString","toUpperCase","formatRoman","Number","nThousands","reverse","numeral","toLowerCase","formatFunctional","temp","floor","toExponential","escape","flags","justStr","RegExp","createRegExp","thousand","preparePattern","o","t","parts","lastPart","numericPattern","prefix","postfix","groupTemp","decTemp","regex","abbreviate","substr","pop","numericRegex","NumberFormatter","localeInfo","thousandDelimiter","decimalDelimiter","prepare","subtype","formatValue","prep","_prepared","patternSeparator","positive","negative","zero","isFunctional","exponent","abbr","absValue","sciValue","decimalPartPattern","original","isNaN","pow","abs","round","toPrecision","log","formatter","wholePart","toFixed","wholePartPattern","nDecimals","nZeroes","decimalPart","m","numberFormatFactory","args","qType","qformat","format","formatFn","patternFn","DAYS","DAYS_ABBR","MONTHS","MONTHS_ABBR","pad","parseDate","twelveFormat","getHours","day","getDay","getFullYear","getMonth","getDate","getMinutes","getSeconds","getMilliseconds","getRemainder","parseIntervalDays","days","ms","parseInterval","units","w","date","Date","getTime","someT","getMasks","inst","year","month","locale_months_abbr","locale_months","locale_days_abbr","locale_days","DateFormatter","qtype","info","qCalendarStrings","qLongDayNames","qDayNames","qLongMonthNames","qMonthNames","patternMap","TYPES","TIME","qTimeFmt","DATE","qDateFmt","DATE_TIME","qTimestampFmt","hasTwelveFlag","parsedDate","masks","masksArr","mask","hasOwnProperty","call","dateTimeRegex","result","r","submask","def","dateFormatFactory","QlikTimeToDate","INTERVAL","locale","li","qtypeFn","nqt","createFromMetaInfo","meta","qNumFormat","timeFormat","qFmt","qThousandSep","qDecimalSep","isAuto","qIsAutoFormat","qThou","qDec","numberFormat","elemNoFn","qMode","qElemNumber","qElemNo","measureValue","qNum","qValue","qField","id","fieldExtractor","values","valueFn","labelFn","qText","qFallbackTitle","qMin","qMax","qTags","augmentH","extractData","kExtractor","SExtractor","createAttrFields","pages","fieldKey","qAttrDimInfo","attrDim","qAttrExprInfo","attrExpr","q","qStackedDataPages","extractionConfig","hierarchyConfig","dimensions","LAYOUT_TO_PROP","extractFieldFromId","layout","isDimension","index","pathToHC","shortenPath","attr","attrDimColIdx","hc","dim","meas","qBrush","brush","opts","byCells","primarySource","selections","methods","isActive","hasValues","brushes","b","ranges","rangeSelectHyperCubeValues","range","selectHyperCubeContinuousRange","selectHyperCubeCells","cols","initialize","picasso","qBrushHelper"],"mappings":";;;;;;;;;;;AAAA,SAAS,KAAK,CAAC,IAAI,EAAE;EACnB,IAAI,GAAG,GAAG,CAAC;MACP,QAAQ,GAAG,IAAI,CAAC,QAAQ;MACxB,CAAC,GAAG,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC;EACpC,IAAI,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;OACX,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;EAC/C,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;CAClB;;AAED,iBAAe,WAAW;EACxB,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;CAC9B;;ACXD,gBAAe,SAAS,QAAQ,EAAE;EAChC,IAAI,IAAI,GAAG,IAAI,EAAE,OAAO,EAAE,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;EACxD,GAAG;IACD,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,GAAG,EAAE,CAAC;IACpC,OAAO,IAAI,GAAG,OAAO,CAAC,GAAG,EAAE,EAAE;MAC3B,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;MACzC,IAAI,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;QACzD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;OACxB;KACF;GACF,QAAQ,IAAI,CAAC,MAAM,EAAE;EACtB,OAAO,IAAI,CAAC;CACb;;ACZD,sBAAe,SAAS,QAAQ,EAAE;EAChC,IAAI,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;EAC7C,OAAO,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,EAAE;IACzB,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IACzC,IAAI,QAAQ,EAAE,KAAK,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;MACvD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KACzB;GACF;EACD,OAAO,IAAI,CAAC;CACb;;ACTD,qBAAe,SAAS,QAAQ,EAAE;EAChC,IAAI,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,GAAG,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3D,OAAO,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,EAAE;IACzB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC1C,IAAI,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;MACzD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KACzB;GACF;EACD,OAAO,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE;IACxB,QAAQ,CAAC,IAAI,CAAC,CAAC;GAChB;EACD,OAAO,IAAI,CAAC;CACb;;ACZD,eAAe,SAAS,KAAK,EAAE;EAC7B,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,IAAI,EAAE;IACnC,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC5B,QAAQ,GAAG,IAAI,CAAC,QAAQ;QACxB,CAAC,GAAG,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC;IACpC,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAC1C,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;GAClB,CAAC,CAAC;CACJ;;ACRD,gBAAe,SAAS,OAAO,EAAE;EAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,IAAI,EAAE;IACpC,IAAI,IAAI,CAAC,QAAQ,EAAE;MACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC7B;GACF,CAAC,CAAC;CACJ;;ACND,gBAAe,SAAS,GAAG,EAAE;EAC3B,IAAI,KAAK,GAAG,IAAI;MACZ,QAAQ,GAAG,mBAAmB,CAAC,KAAK,EAAE,GAAG,CAAC;MAC1C,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;EACpB,OAAO,KAAK,KAAK,QAAQ,EAAE;IACzB,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;IACrB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;GACnB;EACD,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;EACrB,OAAO,GAAG,KAAK,QAAQ,EAAE;IACvB,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IACxB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;GAClB;EACD,OAAO,KAAK,CAAC;EACd;;AAED,SAAS,mBAAmB,CAAC,CAAC,EAAE,CAAC,EAAE;EACjC,IAAI,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;EACtB,IAAI,MAAM,GAAG,CAAC,CAAC,SAAS,EAAE;MACtB,MAAM,GAAG,CAAC,CAAC,SAAS,EAAE;MACtB,CAAC,GAAG,IAAI,CAAC;EACb,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;EACjB,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;EACjB,OAAO,CAAC,KAAK,CAAC,EAAE;IACd,CAAC,GAAG,CAAC,CAAC;IACN,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;IACjB,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;GAClB;EACD,OAAO,CAAC,CAAC;CACV;;AC7BD,qBAAe,WAAW;EACxB,IAAI,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;EAChC,OAAO,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE;IACzB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAClB;EACD,OAAO,KAAK,CAAC;CACd;;ACND,uBAAe,WAAW;EACxB,IAAI,KAAK,GAAG,EAAE,CAAC;EACf,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE;IACvB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAClB,CAAC,CAAC;EACH,OAAO,KAAK,CAAC;CACd;;ACND,kBAAe,WAAW;EACxB,IAAI,MAAM,GAAG,EAAE,CAAC;EAChB,IAAI,CAAC,UAAU,CAAC,SAAS,IAAI,EAAE;IAC7B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;MAClB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACnB;GACF,CAAC,CAAC;EACH,OAAO,MAAM,CAAC;CACf;;ACRD,iBAAe,WAAW;EACxB,IAAI,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,EAAE,CAAC;EAC5B,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE;IACvB,IAAI,IAAI,KAAK,IAAI,EAAE;MACjB,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;KACjD;GACF,CAAC,CAAC;EACH,OAAO,KAAK,CAAC;CACd;;ACIc,SAAS,SAAS,CAAC,IAAI,EAAE,QAAQ,EAAE;EAChD,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;MACrB,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;MACjD,IAAI;MACJ,KAAK,GAAG,CAAC,IAAI,CAAC;MACd,KAAK;MACL,MAAM;MACN,CAAC;MACD,CAAC,CAAC;;EAEN,IAAI,QAAQ,IAAI,IAAI,EAAE,QAAQ,GAAG,eAAe,CAAC;;EAEjD,OAAO,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,EAAE;IACzB,IAAI,MAAM,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;IAC1C,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE;MACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;MAC7B,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;QAC3B,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3D,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;QACpB,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;OAC9B;KACF;GACF;;EAED,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;CACvC;;AAED,SAAS,SAAS,GAAG;EACnB,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;CAC7C;;AAED,SAAS,eAAe,CAAC,CAAC,EAAE;EAC1B,OAAO,CAAC,CAAC,QAAQ,CAAC;CACnB;;AAED,SAAS,QAAQ,CAAC,IAAI,EAAE;EACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;CAC5B;;AAED,SAAgB,aAAa,CAAC,IAAI,EAAE;EAClC,IAAI,MAAM,GAAG,CAAC,CAAC;EACf,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACjB,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,MAAM,IAAI,CAAC,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE;CAC1D;;AAED,SAAgB,IAAI,CAAC,IAAI,EAAE;EACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACjB,IAAI,CAAC,KAAK;EACV,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;EAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;CACpB;;AAED,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,GAAG;EACrC,WAAW,EAAE,IAAI;EACjB,KAAK,EAAE,UAAU;EACjB,IAAI,EAAE,SAAS;EACf,SAAS,EAAE,cAAc;EACzB,UAAU,EAAE,eAAe;EAC3B,GAAG,EAAE,QAAQ;EACb,IAAI,EAAE,SAAS;EACf,IAAI,EAAE,SAAS;EACf,SAAS,EAAE,cAAc;EACzB,WAAW,EAAE,gBAAgB;EAC7B,MAAM,EAAE,WAAW;EACnB,KAAK,EAAE,UAAU;EACjB,IAAI,EAAE,SAAS;CAChB,CAAC;;ACnCF,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE;EACzB,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACnD,OAAO,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CAC9C;;AAED,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE;EAC1B,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC1D,OAAO,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CAC9C;;AAED,SAAS,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE;EAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IACjC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MAC1B,OAAO,KAAK,CAAC;KACd;GACF;EACD,OAAO,IAAI,CAAC;CACb;;AAED,SAgBS,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE;EAC3B,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;MAC5B,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;MAC5B,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE;MAC3C,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;EACzC,OAAO;IACL,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC;IAChC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC;IAChC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC;GACrB,CAAC;CACH;;AAED,SAAS,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;EAC9B,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;MAC5B,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;MAC5B,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;MAC5B,EAAE,GAAG,EAAE,GAAG,EAAE;MACZ,EAAE,GAAG,EAAE,GAAG,EAAE;MACZ,EAAE,GAAG,EAAE,GAAG,EAAE;MACZ,EAAE,GAAG,EAAE,GAAG,EAAE;MACZ,EAAE,GAAG,EAAE,GAAG,EAAE;MACZ,EAAE,GAAG,EAAE,GAAG,EAAE;MACZ,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;MAChC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;MACrC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;MACrC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;MACtB,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE;MACxC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;MAC7B,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE;MACxC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;MAC7B,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACzB,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;MAChC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;MAC/B,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EACpE,OAAO;IACL,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACnB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACnB,CAAC,EAAE,CAAC;GACL,CAAC;CACH;;ACrHD,kBAAe,SAAS,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAC9C,IAAI,KAAK,GAAG,MAAM,CAAC,QAAQ;MACvB,IAAI;MACJ,CAAC,GAAG,CAAC,CAAC;MACN,CAAC,GAAG,KAAK,CAAC,MAAM;MAChB,CAAC,GAAG,MAAM,CAAC,KAAK,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC;;EAEjD,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE;IACd,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IAC5C,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;GAC9C;CACF;;ACgDD,SAAS,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE;EACzB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;EACd,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;EACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;EACrB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;EACd,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;EACd,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;EACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;EACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;EACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;EACX,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;EACd,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;CACZ;;AAED,QAAQ,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;ACzEnD,mBAAe,SAAS,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAC9C,IAAI,KAAK,GAAG,MAAM,CAAC,QAAQ;MACvB,IAAI;MACJ,CAAC,GAAG,CAAC,CAAC;MACN,CAAC,GAAG,KAAK,CAAC,MAAM;MAChB,CAAC,GAAG,MAAM,CAAC,KAAK,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC;;EAEjD,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE;IACd,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IAC5C,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;GAC9C;CACF;;ACNM,SAAS,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAC3D,IAAI,IAAI,GAAG,EAAE;MACT,KAAK,GAAG,MAAM,CAAC,QAAQ;MACvB,GAAG;MACH,SAAS;MACT,EAAE,GAAG,CAAC;MACN,EAAE,GAAG,CAAC;MACN,CAAC,GAAG,KAAK,CAAC,MAAM;MAChB,EAAE,EAAE,EAAE;MACN,KAAK,GAAG,MAAM,CAAC,KAAK;MACpB,QAAQ;MACR,QAAQ;MACR,QAAQ;MACR,QAAQ;MACR,QAAQ;MACR,KAAK;MACL,IAAI,CAAC;;EAET,OAAO,EAAE,GAAG,CAAC,EAAE;IACb,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;;;IAG3B,GAAG,QAAQ,GAAG,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,IAAI,EAAE,GAAG,CAAC,EAAE;IAC7D,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC/B,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC;IACrD,IAAI,GAAG,QAAQ,GAAG,QAAQ,GAAG,KAAK,CAAC;IACnC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,EAAE,IAAI,GAAG,QAAQ,CAAC,CAAC;;;IAGtD,OAAO,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;MACnB,QAAQ,IAAI,SAAS,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC;MACxC,IAAI,SAAS,GAAG,QAAQ,EAAE,QAAQ,GAAG,SAAS,CAAC;MAC/C,IAAI,SAAS,GAAG,QAAQ,EAAE,QAAQ,GAAG,SAAS,CAAC;MAC/C,IAAI,GAAG,QAAQ,GAAG,QAAQ,GAAG,KAAK,CAAC;MACnC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,EAAE,IAAI,GAAG,QAAQ,CAAC,CAAC;MACtD,IAAI,QAAQ,GAAG,QAAQ,EAAE,EAAE,QAAQ,IAAI,SAAS,CAAC,CAAC,MAAM,EAAE;MAC1D,QAAQ,GAAG,QAAQ,CAAC;KACrB;;;IAGD,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjF,IAAI,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,EAAE,IAAI,EAAE,GAAG,QAAQ,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC;SAChF,YAAY,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,EAAE,IAAI,EAAE,GAAG,QAAQ,GAAG,KAAK,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7E,KAAK,IAAI,QAAQ,EAAE,EAAE,GAAG,EAAE,CAAC;GAC5B;;EAED,OAAO,IAAI,CAAC;CACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDD;;;;;;;;;;;;;;;;;AAiBA,SAAwBA,OAAT,CAAiBC,IAAjB,EAAuBC,GAAvB,EAA4B;MACrCD,KAAKE,MAAL,CAAY,CAAZ,MAAmB,GAAvB,EAA4B;WACnBF,KAAKG,SAAL,CAAe,CAAf,CAAP;;MAEIC,MAAMJ,KAAKK,KAAL,CAAW,GAAX,CAAZ;MACIC,gBAAJ;MACIC,YAAYN,GAAhB;OACK,IAAIO,IAAI,CAAb,EAAgBA,IAAIJ,IAAIK,MAAxB,EAAgCD,GAAhC,EAAqC;QAC/BJ,IAAII,CAAJ,MAAW,GAAX,IAAkBE,MAAMC,OAAN,CAAcJ,SAAd,CAAtB,EAAgD;UACxCK,OAAO,EAAb;gBACUR,IAAIS,KAAJ,CAAUL,IAAI,CAAd,EAAiBM,IAAjB,CAAsB,GAAtB,CAAV;WACK,IAAIC,IAAI,CAAb,EAAgBA,IAAIR,UAAUE,MAA9B,EAAsCM,GAAtC,EAA2C;YACrCC,IAAIjB,QAAQO,OAAR,EAAiBC,UAAUQ,CAAV,CAAjB,CAAR;;YAEIL,MAAMC,OAAN,CAAcK,CAAd,CAAJ,EAAsB;eACfC,IAAL,+BAAaD,CAAb;SADF,MAEO;eACAC,IAAL,CAAUD,CAAV;;;aAGGJ,IAAP;;KAZF,MAcO,IAAI,CAACR,IAAII,CAAJ,CAAD,IAAWE,MAAMC,OAAN,CAAcJ,SAAd,CAAf,EAAyC;UACxCK,QAAO,IAAIF,KAAJ,CAAUH,UAAUE,MAApB,CAAb;gBACUL,IAAIS,KAAJ,CAAUL,IAAI,CAAd,EAAiBM,IAAjB,CAAsB,GAAtB,CAAV;WACK,IAAIC,KAAI,CAAb,EAAgBA,KAAIR,UAAUE,MAA9B,EAAsCM,IAAtC,EAA2C;cACpCA,EAAL,IAAUhB,QAAQO,OAAR,EAAiBC,UAAUQ,EAAV,CAAjB,CAAV;;aAEKH,KAAP;;KANK,MAQA,IAAIR,IAAII,CAAJ,KAAUD,SAAd,EAAyB;kBAClBA,UAAUH,IAAII,CAAJ,CAAV,CAAZ;;;;SAIGD,SAAP;;;AC9CF,SAASW,QAAT,CAAkBC,QAAlB,EAA4BC,IAA5B,EAAkC;MAC5BC,MAAMF,QAAV;MACMG,UAAUF,KAAKG,cAAL,CAAoBd,MAApC;MACMe,UAAUJ,KAAKK,YAAL,CAAkBhB,MAAlC;MACMiB,QAAQN,KAAKO,8BAAnB;MACIN,MAAMC,OAAN,IAAiBI,KAArB,EAA4B;UACpBA,MAAME,OAAN,CAAcP,GAAd,CAAN;GADF,MAEO,IAAIA,OAAOC,OAAP,IAAkBI,KAAlB,IAA2BF,UAAU,CAArC,IAA0CE,MAAME,OAAN,CAAc,CAAC,CAAf,MAAsB,CAAC,CAArE,EAAwE;UACvEF,MAAME,OAAN,CAAc,CAAC,CAAf,CAAN;;MAEEC,IAAI,oBAAR;MACMC,QAAQC,KAAKC,GAAL,CAAS,CAAT,EAAYD,KAAKE,GAAL,CAASZ,GAAT,EAAcC,OAAd,CAAZ,CAAd;MACId,IAAI,CAAR;SACOA,IAAIsB,KAAX,EAAkBtB,GAAlB,EAAuB;;SAChB,cAAL;;MAEEW,YAAYG,OAAhB,EAAyB;;QAEnBE,UAAU,CAAd,EAAiB;kBACNL,WAAWG,OAApB,iBADe;QAEbd,CAAF;;aAEOA,KAAKc,OAAZ,EAAqBd,GAArB,EAA0B;aACnB,cAAL;;KALJ,MAOO;kBACIW,WAAWG,OAApB;;;SAGGO,CAAP;;;AAGF,SAASK,WAAT,CAAqBL,CAArB,EAAwBM,OAAxB,EAAiCC,UAAjC,EAA6C;MACvC,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;WACrBN,CAAV,6BAAmCM,OAAnC;;MAEE,OAAOC,UAAP,KAAsB,QAA1B,EAAoC;WACxBP,CAAV,6BAAmCO,UAAnC;;SAEKP,CAAP;;;AAIF,SAASQ,mBAAT,CAA6BC,KAA7B,QAGG;MAFDC,KAEC,QAFDA,KAEC;MADDnB,IACC,QADDA,IACC;;MACG,CAACkB,KAAL,EAAY;WACH,EAAP;;MAEEnB,WAAWoB,MAAMC,MAAN,CAAaZ,OAAb,CAAqBU,KAArB,CAAf;MACIH,gBAAJ;MACIC,mBAAJ;MACIjB,aAAa,CAAC,CAAlB,EAAqB;SACd,IAAIX,IAAI,CAAb,EAAgBA,IAAI+B,MAAME,wBAAN,CAA+BhC,MAAnD,EAA2DD,GAA3D,EAAgE;mBACjD+B,MAAME,wBAAN,CAA+BjC,CAA/B,IAAoC+B,MAAME,wBAAN,CAA+BjC,CAA/B,EAAkCoB,OAAlC,CAA0CU,KAA1C,CAApC,GAAuF,CAAC,CAArG;UACIF,eAAe,CAAC,CAApB,EAAuB;mBACV5B,CAAX;;;;;MAKFW,aAAa,CAAC,CAAlB,EAAqB;SACd,IAAIX,KAAI,CAAb,EAAgBA,KAAI+B,MAAMG,yBAAN,CAAgCjC,MAApD,EAA4DD,IAA5D,EAAiE;gBACrD+B,MAAMG,yBAAN,CAAgClC,EAAhC,IAAqC+B,MAAMG,yBAAN,CAAgClC,EAAhC,EAAmCoB,OAAnC,CAA2CU,KAA3C,CAArC,GAAyF,CAAC,CAApG;UACIH,YAAY,CAAC,CAAjB,EAAoB;mBACP3B,EAAX;;;;;SAKC0B,YAAYhB,SAASC,QAAT,EAAmBC,IAAnB,CAAZ,EAAsCe,WAAW,CAAX,GAAeA,OAAf,GAAyBQ,SAA/D,EAA0EP,cAAc,CAAd,GAAkBA,UAAlB,GAA+BO,SAAzG,CAAP;;;AAGF,SAASC,WAAT,CAAqBN,KAArB,SAA6C;MAAfC,KAAe,SAAfA,KAAe;MAARnB,IAAQ,SAARA,IAAQ;;MACrCyB,KAAKR,oBAAoBC,KAApB,EAA2B,EAAEC,YAAF,EAASnB,UAAT,EAA3B,CAAX;MACM0B,KAAKD,GAAGE,OAAH,CAAW,YAAX,EAAyB,UAAzB,CAAX;MACMC,KAAKF,GAAGC,OAAH,CAAW,YAAX,EAAyB,YAAzB,CAAX;SACOC,GAAGD,OAAH,CAAW,WAAX,EAAwB,EAAxB,CAAP;;;AAGF,SAAwBE,OAAT,CAAiBC,MAAjB,EAAyBC,OAAzB,EAAkCZ,KAAlC,EAAyCa,IAAzC,EAA+C;MACtDC,WAAW,4BAAjB;MACMjC,OAAO+B,QAAQG,GAAR,EAAb;;MAEMC,OAAOC,QAAOH,QAAP,EAAiBjC,IAAjB,CAAb;MACI,CAACmC,IAAD,IAAS,CAACA,KAAK,CAAL,CAAd,EAAuB;WACd,IAAP;;;MAGIE,IAAIC,UAAUH,KAAK,CAAL,CAAV,EAAmBL,OAAOS,QAAP,IAAoB;WAAQC,KAAKC,SAAb;GAAvC,CAAV;;MAEMC,SAASL,EAAEK,MAAjB;MACMC,WAAW,EAAjB;;6BACSvD,CAbmD;gCAclC4C,KAAKY,eAAL,CAAqBd,MAArB,EAA6BC,OAA7B,CAdkC;QAclDc,KAdkD,yBAclDA,KAdkD;QAc3CC,IAd2C,yBAc3CA,IAd2C;;QAepDC,WAAWC,OAAOC,IAAP,CAAYJ,KAAZ,CAAjB;aACSzD,CAAT,IAAc,EAAE2D,kBAAF,EAAYF,YAAZ,EAAmBC,UAAnB,EAAd;QACII,eAAe,IAAnB;QACMC,SAAS/D,MAAM,CAArB;QACIA,IAAI,CAAR,EAAW;UACLa,MAAMD,KAAKO,8BAAL,CAAoCnB,IAAI,CAAxC,CAAV;;;;;UAKIA,IAAIY,KAAKO,8BAAL,CAAoClB,MAA5C,EAAoD;cAC5CW,KAAKG,cAAL,CAAoBd,MAA1B;;;qBAGa8B,MAAMC,MAAN,CAAanB,GAAb,CAAf;;QAEImD,mBAAmBF,eAAe1B,YAAY0B,YAAZ,EAA0B,EAAElD,UAAF,EAAQmB,YAAR,EAA1B,CAAf,GAA4Dc,QAArF;;aAESoB,OAAT,CAAiB,UAACC,IAAD,EAAU;UACnBC,OAAOV,MAAMS,IAAN,CAAb;UACMtE,MAAMuE,KAAKnC,MAAL,GAAcmC,KAAKnC,MAAnB,GAA4B,CAACmC,IAAD,CAAxC;UACIF,OAAJ,CAAY,UAACG,CAAD,EAAO;YACbA,EAAEtC,KAAN,EAAa;cACLuC,YAAYjC,YAAYgC,EAAEtC,KAAd,EAAqB,EAAElB,UAAF,EAAQmB,YAAR,EAArB,CAAlB;cACIsC,cAAcL,gBAAlB,EAAoC;cAChCM,MAAF,GAAW,IAAX;WADF,MAEO,IAAIP,MAAJ,EAAY;cACfQ,YAAF,GAAiB,IAAjB;cACE/E,IAAF,GAAY6E,SAAZ;WAFK,MAGA;gBACCE,eAAeF,UAAUG,KAAV,CAAgB,KAAhB,EAAuBvE,MAAvB,GAAgC+D,iBAAiBQ,KAAjB,CAAuB,KAAvB,EAA8BvE,MAAnF;gBACIwE,aAAa,EAAjB;gBACIF,YAAJ,EAAkB;2BACAF,UAAU9B,OAAV,CAAkByB,gBAAlB,EAAoC,EAApC,EAAwCzB,OAAxC,CAAgD,OAAhD,EAAyD,EAAzD,CAAhB;aADF,MAEO;2BACQhB,KAAKmD,IAAL,CAAU,CAACV,iBAAiBQ,KAAjB,CAAuB,KAAvB,EAA8BvE,MAA9B,GAAuCoE,UAAUG,KAAV,CAAgB,KAAhB,EAAuBvE,MAA/D,IAAyE,CAAnF,CAAb;;cAEAsE,YAAF,GAAiBA,YAAjB;cACE/E,IAAF,GAASiF,UAAT;;;OAjBN;KAHF;;;OApBG,IAAIzE,IAAI,CAAb,EAAgBA,KAAKsD,MAArB,EAA6BtD,GAA7B,EAAkC;UAAzBA,CAAyB;;;MA+C5B2E,eAAe,EAArB;MACIC,UAAU,CAAd;IACEC,IAAF,CAAO,UAACzB,IAAD,EAAU;QACT0B,kBAAkBH,aAAaC,SAAb,IAA0BxB,KAAK2B,IAAvD;QACMpB,WAAWJ,SAASH,KAAK9B,KAAd,EAAqBqC,QAAtC;QACMF,QAAQF,SAASH,KAAK9B,KAAd,EAAqBmC,KAAnC;QACMC,OAAOH,SAASH,KAAK9B,KAAd,EAAqBoC,IAAlC;;SAEKqB,IAAL,GAAY;aACH,OAAOrB,KAAKsB,KAAZ,KAAsB,UAAtB,GAAmCtB,KAAKsB,KAAL,CAAWF,eAAX,CAAnC,GAAiEA;KAD1E;aAGSb,OAAT,CAAiB,UAACC,IAAD,EAAU;UACnBC,OAAOV,MAAMS,IAAN,CAAb;UACMtE,MAAMuE,KAAKnC,MAAL,GAAcmC,KAAKnC,MAAnB,GAA4B,CAACmC,IAAD,CAAxC;UACIc,aAAJ;UACId,KAAKnC,MAAT,EAAiB;eACR,EAAP;;UAEEiC,OAAJ,CAAY,UAACG,CAAD,EAAO;YACbc,KAAK;iBAAK1E,CAAL;SAAT;YACIwE,cAAJ;YACIZ,EAAEe,IAAF,KAAW,WAAf,EAA4B;kBAClBf,EAAEY,KAAV;SADF,MAEO;cACD,OAAOZ,EAAEY,KAAT,KAAmB,UAAvB,EAAmC;iBAC5B,YAACxE,CAAD,EAAI4E,CAAJ;qBAAUhB,EAAEY,KAAF,CAAQxE,CAAR,EAAW4E,CAAX,CAAV;aAAL;;cAEE,CAAChB,EAAEtC,KAAP,EAAc;oBACJgD,eAAR;WADF,MAEO,IAAIV,EAAEE,MAAN,EAAc;oBACXQ,eAAR;WADK,MAEA,IAAIV,EAAEG,YAAN,EAAoB;oBACjBvB,QAAOoB,EAAE5E,IAAT,EAAe4D,IAAf,CAAR;gBACIlD,MAAMC,OAAN,CAAc6E,KAAd,CAAJ,EAA0B;sBAChBA,MAAMK,GAAN,CAAUH,EAAV,CAAR;mBACKd,EAAEkB,MAAF,IAAa;uBAAK9E,EAAEF,IAAF,CAAO,IAAP,CAAL;eAAlB;;WAJG,MAMA,IAAI8D,EAAE5E,IAAN,EAAY;;gBACX+F,MAAMnB,EAAE5E,IAAF,IAAU,CAAtB;gBACIgG,KAAKpC,IAAT;iBACK,IAAIpD,IAAI,CAAb,EAAgBA,IAAIuF,GAApB,EAAyBvF,GAAzB,EAA8B;mBACvBwF,GAAGC,MAAR;;oBAEMD,GAAGT,IAAH,CAAQC,KAAhB;;;YAGAb,KAAKnC,MAAT,EAAiB;eACVvB,IAAL,CAAUyE,GAAGF,KAAH,EAAU5B,IAAV,CAAV;SADF,MAEO;eACA2B,IAAL,CAAUb,IAAV,IAAkB;mBACTgB,GAAGF,KAAH,EAAU5B,IAAV;WADT;cAGIgB,EAAEsB,MAAN,EAAc;iBACPX,IAAL,CAAUb,IAAV,EAAgBwB,MAAhB,GAAyB,EAAE5D,OAAOsC,EAAEsB,MAAX,EAAzB;;;OAnCN;;;UAyCIT,IAAJ,EAAU;aACHF,IAAL,CAAUb,IAAV,IAAkB;iBACT,OAAOC,KAAKa,KAAZ,KAAsB,UAAtB,GAAmCb,KAAKa,KAAL,CAAWC,IAAX,EAAiB7B,IAAjB,CAAnC,GAA4D6B;SADrE;;KAjDJ;GATF;;SAiEOhC,CAAP;;;ACtNF,SAAS0C,WAAT,CAAqBxC,QAArB,EAA+ByC,KAA/B,EAAsC1B,IAAtC,EAA4C2B,qBAA5C,EAAmE;MAC3DjG,MAAM,EAAZ;MACI,CAACuD,QAAD,IAAa,CAACA,SAASlD,MAA3B,EAAmC;WAC1BL,GAAP;;MAEEgG,SAAS,CAAb,EAAgB;QACRE,QAAQD,yBAAyB,CAAzB,GAA6B,CAAC1C,SAAS0C,qBAAT,CAAD,CAA7B,GAAiE1C,QAA/E;QACIe,IAAJ,EAAU;UACJzD,IAAJ,8BAAYqF,MAAMT,GAAN,CAAU;eAAK7E,EAAE0D,IAAF,CAAL;OAAV,CAAZ;KADF,MAEO;UACDzD,IAAJ,8BAAYqF,KAAZ;;GALJ,MAOO;SACA,IAAI9F,IAAI,CAAb,EAAgBA,IAAImD,SAASlD,MAA7B,EAAqCD,GAArC,EAA0C;UACpCmD,SAASnD,CAAT,EAAYmD,QAAZ,IAAwBA,SAASnD,CAAT,EAAYmD,QAAZ,CAAqBlD,MAAjD,EAAyD;YACnDQ,IAAJ,8BAAYkF,YAAYxC,SAASnD,CAAT,EAAYmD,QAAxB,EAAkCyC,QAAQ,CAA1C,EAA6C1B,IAA7C,EAAmD2B,qBAAnD,CAAZ;;;;SAICjG,GAAP;;;AAGF,SAAgBmG,YAAT,CAAsBC,WAAtB,EAAmCC,WAAnC,EAAgD/B,IAAhD,EAAsD2B,qBAAtD,EAA6E;MAC9EG,gBAAgBC,WAApB,EAAiC;QAC3Bf,WAAJ;QACIhB,IAAJ,EAAU;WACHgC,SAAS,MAAT,mBAAgChC,IAAhC,OAAL,CADQ;KAAV,MAEO;WACA;eAAKiC,CAAL;OAAL;;WAEKjB,EAAP;;MAEEc,cAAcC,WAAlB,EAA+B;;QACvBL,QAAQrE,KAAKC,GAAL,CAAS,CAAT,EAAYD,KAAKE,GAAL,CAAS,GAAT,EAAcuE,cAAcC,WAA5B,CAAZ,CAAd;QACMzG,OAAO,4BAAIU,MAAM0F,KAAN,CAAJ,GAAkBP,GAAlB,CAAsBe,OAAOC,SAAP,CAAiBC,OAAvC,EAAgD,QAAhD,EAA0DhG,IAA1D,CAA+D,GAA/D,CAAb;QACI4E,YAAJ;QACIhB,IAAJ,EAAU;YACHgC,SAAS,MAAT,mBAAgC1G,IAAhC,SAAwC0E,IAAxC,OAAL,CADQ;KAAV,MAEO;YACAgC,SAAS,MAAT,mBAAgC1G,IAAhC,OAAL,CADK;;WAGA0F,GAAP;;MAEEe,cAAcD,WAAlB,EAA+B;;QACvBJ,SAAQrE,KAAKC,GAAL,CAAS,CAAT,EAAYD,KAAKE,GAAL,CAAS,GAAT,EAAcwE,cAAcD,WAA5B,CAAZ,CAAd;QACMd,OAAK,SAALA,IAAK;aAAQS,YAAYvC,KAAKD,QAAjB,EAA2ByC,SAAQ,CAAnC,EAAsC1B,IAAtC,EAA4C2B,qBAA5C,CAAR;KAAX;WACOX,IAAP;;SAEK,KAAP;;;AAGF,SAAgBqB,SAAT,CAAmBC,KAAnB,QAAqC;MAATzE,KAAS,QAATA,KAAS;;;;;;;MAMtC,OAAOyE,KAAP,KAAiB,QAArB,EAA+B;WACtBzE,MAAMC,MAAN,CAAawE,KAAb,CAAP;;;MAGIC,YAAY1E,MAAMC,MAAN,CAAa3B,KAAb,EAAlB;GACC0B,MAAME,wBAAN,IAAkC,EAAnC,EAAuCgC,OAAvC,CAA+C;WAAUwC,UAAUhG,IAAV,oCAAkBuB,MAAlB,EAAV;GAA/C;GACCD,MAAMG,yBAAN,IAAmC,EAApC,EAAwC+B,OAAxC,CAAgD;WAAUwC,UAAUhG,IAAV,oCAAkBuB,MAAlB,EAAV;GAAhD;MACI,OAAOwE,KAAP,KAAiB,UAArB,EAAiC;SAC1B,IAAIxG,IAAI,CAAb,EAAgBA,IAAIyG,UAAUxG,MAA9B,EAAsCD,GAAtC,EAA2C;UACrCwG,MAAMC,UAAUzG,CAAV,CAAN,CAAJ,EAAyB;eAChByG,UAAUzG,CAAV,CAAP;;;WAGG,KAAP;GANF,MAOO,IAAI,OAAOwG,KAAP,KAAiB,QAArB,EAA+B;SAC/B,IAAIxG,KAAI,CAAb,EAAgBA,KAAIyG,UAAUxG,MAA9B,EAAsCD,IAAtC,EAA2C;;UAErCyG,UAAUzG,EAAV,EAAa0G,GAAb,OAAuBF,KAAvB,IAAgCC,UAAUzG,EAAV,EAAa2G,KAAb,OAAyBH,KAA7D,EAAoE;eAC3DC,UAAUzG,EAAV,CAAP;;;GAJC,MAOA,IAAIwG,SAASC,UAAUrF,OAAV,CAAkBoF,KAAlB,MAA6B,CAAC,CAA3C,EAA8C;;WAC5CA,KAAP;;;QAGII,4BAA0BJ,KAA1B,CAAN;;;ACxEF,IAAMK,SAAS,6BAAf;AACA,IAAMC,OAAO,sBAAb;AACA,IAAMC,eAAe,wBAArB;AACA,IAAMC,cAAc,uBAApB;;AAEA,SAASC,aAAT,CAAuBnF,KAAvB,QAAwC;MAARlB,IAAQ,QAARA,IAAQ;;MAClC,CAACkB,KAAL,EAAY;WACH,CAAC,CAAR;;MAEE4E,MAAM5E,MAAM4E,GAAN,EAAV;MACIQ,mBAAmB,KAAvB;MACIvG,WAAW,CAAC,CAAhB,CANsC;MAOlCgB,UAAU,CAAC,CAAf;MACIC,aAAa,CAAC,CAAlB;MACIuF,aAAa,CAAC,CAAlB;MACIC,qBAAqB,CAAC,CAA1B;MACIC,kBAAJ;;MAEIR,OAAOS,IAAP,CAAYZ,GAAZ,CAAJ,EAAsB;uBACD,IAAnB;eACW,CAACG,OAAOU,IAAP,CAAYb,GAAZ,EAAiB,CAAjB,CAAZ;gBACYA,IAAInE,OAAJ,CAAYsE,MAAZ,EAAoB,EAApB,CAAZ;GAHF,MAIO,IAAIC,KAAKQ,IAAL,CAAUZ,GAAV,CAAJ,EAAoB;yBACJ,CAACI,KAAKS,IAAL,CAAUb,GAAV,EAAe,CAAf,CAAtB;gBACYA,IAAInE,OAAJ,CAAYuE,IAAZ,EAAkB,EAAlB,CAAZ;;;MAGEO,SAAJ,EAAe;QACTL,YAAYO,IAAZ,CAAiBF,SAAjB,CAAJ,EAAiC;mBAClB,CAACL,YAAYO,IAAZ,CAAiBF,SAAjB,EAA4B,CAA5B,CAAd;KADF,MAEO,IAAIN,aAAaQ,IAAb,CAAkBF,SAAlB,CAAJ,EAAkC;gBAC7B,CAACN,aAAaQ,IAAb,CAAkBF,SAAlB,EAA6B,CAA7B,CAAX;;;;MAIEG,YAAY5G,KAAKO,8BAAvB;;MAEI+F,gBAAJ,EAAsB;iBACPM,YAAYA,UAAUpG,OAAV,CAAkBT,QAAlB,CAAZ,GAA0CA,QAAvD;GADF,MAEO,IAAI6G,aAAaA,UAAUpG,OAAV,CAAkB,CAAC,CAAnB,MAA0B,CAAC,CAA5C,EAA+C;;iBACvCoG,UAAUpG,OAAV,CAAkB,CAAC,CAAnB,CAAb,CADoD;GAA/C,MAEA;;iBACQR,KAAKG,cAAL,CAAoBd,MAAjC;;;SAGK;gBACOkH,aAAa,CADpB;0CAAA;0BAAA;;GAAP;;;AAQF,SAASM,gBAAT,CAA0BC,iBAA1B,EAA6CC,iBAA7C,EAAgEzD,IAAhE,EAAsE;MAChE0D,SAAS7B,aAAa2B,kBAAkBP,UAA/B,EAA2CQ,kBAAkBR,UAA7D,EAAyEjD,IAAzE,EAA+EyD,kBAAkBP,kBAAjG,CAAb;MACIS,eAAJ;;MAEIF,kBAAkB/F,UAAlB,IAAgC,CAApC,EAAuC;aAC5B;aAAQmD,KAAK+C,SAAL,CAAeC,OAAf,CAAuBJ,kBAAkB/F,UAAzC,CAAR;KAAT;GADF,MAEO,IAAI+F,kBAAkBhG,OAAlB,IAA6B,CAAjC,EAAoC;aAChC;aAAQoD,KAAKiD,SAAL,CAAeD,OAAf,CAAuBJ,kBAAkBhG,OAAzC,CAAR;KAAT;;;SAGK;kBAAA;;GAAP;;;AAMF,SAASsG,YAAT,CAAsBC,OAAtB,EAA+BC,IAA/B,SAEG;MADDzB,GACC,SADDA,GACC;;MACK0B,QAAQ;WACL,OAAOF,QAAQlD,KAAf,KAAyB,UAAzB,GAAsCkD,QAAQlD,KAAR,CAAcmD,IAAd,CAAtC,GAA4D,OAAOD,QAAQlD,KAAf,KAAyB,WAAzB,GAAuCkD,QAAQlD,KAA/C,GAAuDmD,IAD9G;GAAd;;QAIME,KAAN,GAAc,OAAOH,QAAQG,KAAf,KAAyB,UAAzB,GAAsCH,QAAQG,KAAR,CAAcF,IAAd,CAAtC,GAA4D,OAAOD,QAAQG,KAAf,KAAyB,WAAzB,GAAuCjC,OAAO8B,QAAQG,KAAf,CAAvC,GAA+DjC,OAAOgC,MAAMpD,KAAb,CAAzI,CALC;;MAOGkD,QAAQpG,KAAZ,EAAmB;UACX4D,MAAN,GAAe;cAAA;aAENwC,QAAQpG,KAAR,CAAc4E,GAAd;KAFT;;;SAMK0B,KAAP;;;AAGF,SAAwBE,OAAT,CAAiB5F,MAAjB,EAAyBC,OAAzB,EAAkCZ,KAAlC,EAAyCwG,IAAzC,EAA+C;MACtDC,OAAOtI,MAAMC,OAAN,CAAcuC,MAAd,IAAwBA,MAAxB,GAAiC,CAACA,MAAD,CAA9C;MACI+F,YAAY,EAAhB;OACKxE,OAAL,CAAa,UAACyE,GAAD,EAAS;QAChB,OAAOA,IAAI5G,KAAX,KAAqB,WAAzB,EAAsC;;YAC9BlB,OAAO+B,QAAQG,GAAR,EAAb;YACM6F,YAAYhG,QAAQ+D,GAAR,EAAlB;YACMkC,IAAIC,QAAOH,IAAI5G,KAAX,MAAqB,QAArB,GAAgC4G,IAAI5G,KAApC,GAA4Ca,QAAQb,KAAR,CAAc4G,IAAI5G,KAAlB,CAAtD;;oCACwByG,KAAK/E,eAAL,CAAqBkF,GAArB,EAA0B/F,OAA1B,CAJY;YAI5Bc,KAJ4B,yBAI5BA,KAJ4B;YAIrBC,IAJqB,yBAIrBA,IAJqB;;YAK9BC,WAAWC,OAAOC,IAAP,CAAYJ,KAAZ,CAAjB;YACMZ,WAAW,4BAAjB;YACI,CAACd,MAAM+G,IAAX,EAAiB;cACT/F,OAAOC,QAAOH,QAAP,EAAiBjC,IAAjB,CAAb;gBACMkI,IAAN,GAAa5F,UAAUH,KAAK,CAAL,CAAV,EAAmB;mBAAQK,KAAKC,SAAb;WAAnB,CAAb;;YAEI0F,kBAAkB9B,cAAc2B,CAAd,EAAiB,EAAEhI,UAAF,EAAQmB,YAAR,EAAjB,CAAxB;;gCAC2B0F,iBAAiB,EAAEN,YAAY,CAAd,EAAjB,EAAoC4B,eAApC,CAZS;YAY5BnB,MAZ4B,qBAY5BA,MAZ4B;YAYpBC,MAZoB,qBAYpBA,MAZoB;;YAc9BmB,QAAQ,CAAC,CAACN,IAAIO,OAApB;YACMC,oBAAmBR,IAAIO,OAAvB,CAAN;YACME,UAAU,EAAhB;YACMC,eAAe,EAArB;;YAEMC,QAAQzB,OAAO7F,MAAM+G,IAAb,CAAd;iBACS7E,OAAT,CAAiB,UAACC,IAAD,EAAU;cACnBC,OAAOV,MAAMS,IAAN,CAAb;cACMtE,MAAMuE,KAAKnC,MAAL,GAAcmC,KAAKnC,MAAnB,GAA4B,CAACmC,IAAD,CAAxC;cACIF,OAAJ,CAAY,UAACG,CAAD,EAAO;gBACbA,EAAEtC,KAAN,EAAa;kBACPsC,EAAEtC,KAAF,KAAY8G,CAAhB,EAAmB;kBACftE,MAAF,GAAW,IAAX;eADF,MAEO;oBACCgF,cAAcrC,cAAc7C,EAAEtC,KAAhB,EAAuB,EAAElB,UAAF,EAAQmB,YAAR,EAAvB,CAApB;oBACMwH,YAAY9B,iBAAiBsB,eAAjB,EAAkCO,WAAlC,EAA+C,MAA/C,CAAlB;kBACEE,QAAF,GAAaD,UAAU3B,MAAvB;kBACE6B,YAAF,GAAiBF,UAAU1B,MAA3B;;;WARN;SAHF;YAgBM6B,SAAS,EAAf;;mCACS1J,CArC2B;cAsC5B2J,OAAON,MAAMrJ,CAAN,CAAb;cACM4J,WAAW/B,SAASA,OAAO8B,KAAK5E,IAAZ,CAAT,GAA6B4E,KAAK5E,IAAnD;cACM8E,UAAUnG,KAAKoG,MAAL,IAAe,CAACpG,KAAKoG,MAAL,CAAYF,QAAZ,CAAhC;cACIC,OAAJ,EAAa;;;cAGPE,MAAM9B,aAAavE,IAAb,EAAmBkG,QAAnB,EAA6B,EAAElD,KAAKiC,SAAP,EAA7B,CAAZ;mBACS1E,OAAT,CAAiB,UAACC,IAAD,EAAU;gBACnBC,OAAOV,MAAMS,IAAN,CAAb;gBACMtE,MAAMuE,KAAKnC,MAAL,IAAe,CAACmC,IAAD,CAA3B;gBACIc,aAAJ;gBACId,KAAKnC,MAAT,EAAiB;qBACR,EAAP;;gBAEEiC,OAAJ,CAAY,UAACG,CAAD,EAAO;kBACbc,WAAJ;kBACIF,cAAJ;kBACIZ,EAAEe,IAAF,KAAW,WAAf,EAA4B;wBAClBf,EAAEY,KAAV;eADF,MAEO;oBACD,OAAOZ,EAAEY,KAAT,KAAmB,UAAvB,EAAmC;;uBAC5BZ,EAAEY,KAAP;;oBAEEZ,EAAEoF,QAAN,EAAgB;0BACNpF,EAAEoF,QAAF,CAAWG,IAAX,CAAR;sBACIzJ,MAAMC,OAAN,CAAc6E,KAAd,CAAJ,EAA0B;;wBACpBZ,EAAEqF,YAAN,EAAoB;8BACVzE,MAAMK,GAAN,CAAUjB,EAAEqF,YAAZ,CAAR;;wBAEEvE,EAAJ,EAAQ;8BACEF,MAAMK,GAAN,CAAUH,EAAV,CAAR;2BACK,IAAL;;4BAEMd,EAAEkB,MAAF,GAAWlB,EAAEkB,MAAF,CAASN,KAAT,CAAX,GAA6BA,KAArC;mBARF,MASO;4BACGZ,EAAEqF,YAAF,GAAiBrF,EAAEqF,YAAF,CAAezE,KAAf,CAAjB,GAAyCA,KAAjD;;iBAZJ,MAcO;0BACG4E,QAAR;;;kBAGAzF,KAAKnC,MAAT,EAAiB;qBACVvB,IAAL,CAAUyE,KAAKA,GAAGF,KAAH,CAAL,GAAiBA,KAA3B;eADF,MAEO;oBACDd,IAAJ,IAAY;yBACHgB,KAAKA,GAAGF,KAAH,CAAL,GAAiBA;iBAD1B;oBAGId,IAAJ,EAAUmE,KAAV,GAAkBjC,OAAO2D,IAAI7F,IAAJ,EAAUc,KAAjB,CAAlB;oBACIZ,EAAEtC,KAAN,EAAa;sBACPoC,IAAJ,EAAUwB,MAAV,GAAmB,EAAE5D,OAAOsC,EAAEtC,KAAF,CAAQ4E,GAAR,EAAT,EAAwBA,KAAKiC,SAA7B,EAAnB;;;aAnCN;gBAuCI1D,IAAJ,EAAU;kBACJf,IAAJ,IAAY;uBACH,OAAOC,KAAKa,KAAZ,KAAsB,UAAtB,GAAmCb,KAAKa,KAAL,CAAWC,IAAX,CAAnC,GAAsDA;eAD/D;kBAGIf,IAAJ,EAAUmE,KAAV,GAAkBjC,OAAO2D,IAAI7F,IAAJ,EAAUc,KAAjB,CAAlB;;WAlDJ;;;cAuDIgE,KAAJ,EAAW;iBACJA,KAAL,CAAW;sBAAA;gCAAA;mBAGJe,GAHI;sBAIDX,YAJC;8BAAA;;aAAX;;iBASK3I,IAAP,CAAYsJ,GAAZ;;;aAzEG,IAAI/J,IAAI,CAAb,EAAgBA,IAAIqJ,MAAMpJ,MAA1B,EAAkCD,GAAlC,EAAuC;4BAA9BA,CAA8B;;oCAKnC;;;YAuEAgJ,KAAJ,EAAW;oBACCvI,IAAV,oCAAkB8H,KAAKyB,OAAL,CAAaZ,YAAb,EAA2B;sBAAA;8BAAA;;WAA3B,CAAlB;SADF,MAMO;oBACK3I,IAAV,kBAAkBiJ,MAAlB;;;;GAzHN;SA6HOjB,SAAP;;;AChOF,IAAI,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;AAC7C,IAAI,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;;AAEtC,IAAI,OAAO,GAAG,SAAS,OAAO,CAAC,GAAG,EAAE;CACnC,IAAI,OAAO,KAAK,CAAC,OAAO,KAAK,UAAU,EAAE;EACxC,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;EAC1B;;CAED,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,gBAAgB,CAAC;CAC5C,CAAC;;AAEF,IAAI,aAAa,GAAG,SAAS,aAAa,CAAC,GAAG,EAAE;CAC/C,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,iBAAiB,EAAE;EAClD,OAAO,KAAK,CAAC;EACb;;CAED,IAAI,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;CACxD,IAAI,gBAAgB,GAAG,GAAG,CAAC,WAAW,IAAI,GAAG,CAAC,WAAW,CAAC,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;;CAE/H,IAAI,GAAG,CAAC,WAAW,IAAI,CAAC,iBAAiB,IAAI,CAAC,gBAAgB,EAAE;EAC/D,OAAO,KAAK,CAAC;EACb;;;;CAID,IAAI,GAAG,CAAC;CACR,KAAK,GAAG,IAAI,GAAG,EAAE,QAAQ;;CAEzB,OAAO,OAAO,GAAG,KAAK,WAAW,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC3D,CAAC;;AAEF,UAAc,GAAG,SAAS,MAAM,GAAG;CAClC,IAAI,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,CAAC;CACjD,IAAI,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;CAC1B,IAAI,CAAC,GAAG,CAAC,CAAC;CACV,IAAI,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;CAC9B,IAAI,IAAI,GAAG,KAAK,CAAC;;;CAGjB,IAAI,OAAO,MAAM,KAAK,SAAS,EAAE;EAChC,IAAI,GAAG,MAAM,CAAC;EACd,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;;EAE5B,CAAC,GAAG,CAAC,CAAC;EACN;CACD,IAAI,MAAM,IAAI,IAAI,KAAK,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,UAAU,CAAC,EAAE;EACnF,MAAM,GAAG,EAAE,CAAC;EACZ;;CAED,OAAO,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;EACvB,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEvB,IAAI,OAAO,IAAI,IAAI,EAAE;;GAEpB,KAAK,IAAI,IAAI,OAAO,EAAE;IACrB,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IACnB,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;;;IAGrB,IAAI,MAAM,KAAK,IAAI,EAAE;;KAEpB,IAAI,IAAI,IAAI,IAAI,KAAK,aAAa,CAAC,IAAI,CAAC,KAAK,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;MAC3E,IAAI,WAAW,EAAE;OAChB,WAAW,GAAG,KAAK,CAAC;OACpB,KAAK,GAAG,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;OACvC,MAAM;OACN,KAAK,GAAG,GAAG,IAAI,aAAa,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;OAC7C;;;MAGD,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;;;MAGzC,MAAM,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;MACvC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;MACpB;KACD;IACD;GACD;EACD;;;CAGD,OAAO,MAAM,CAAC;CACd;;ACnFM,SAAShB,kBAAT,CAA0B3F,KAA1B,EAAiCmI,IAAjC,EAAuCrH,IAAvC,EAA6C;MAC9C,CAACd,KAAL,EAAY;WACH,CAAC,CAAR;;MAEIC,QAAQa,KAAKb,KAAnB;MACIpB,WAAWoB,MAAMC,MAAN,CAAaZ,OAAb,CAAqBU,KAArB,CAAf;MACIH,UAAU,CAAC,CAAf;MACIC,aAAa,CAAC,CAAlB;MACIjB,aAAa,CAAC,CAAlB,EAAqB;SACd,IAAIX,IAAI,CAAb,EAAgBA,IAAI+B,MAAME,wBAAN,CAA+BhC,MAAnD,EAA2DD,GAA3D,EAAgE;mBACjD+B,MAAME,wBAAN,CAA+BjC,CAA/B,IAAoC+B,MAAME,wBAAN,CAA+BjC,CAA/B,EAAkCoB,OAAlC,CAA0CU,KAA1C,CAApC,GAAuF,CAAC,CAArG;UACIF,eAAe,CAAC,CAApB,EAAuB;mBACV5B,CAAX;;;;;MAKFW,aAAa,CAAC,CAAlB,EAAqB;SACd,IAAIX,KAAI,CAAb,EAAgBA,KAAI+B,MAAMG,yBAAN,CAAgCjC,MAApD,EAA4DD,IAA5D,EAAiE;gBACrD+B,MAAMG,yBAAN,CAAgClC,EAAhC,IAAqC+B,MAAMG,yBAAN,CAAgClC,EAAhC,EAAmCoB,OAAnC,CAA2CU,KAA3C,CAArC,GAAyF,CAAC,CAApG;UACIH,YAAY,CAAC,CAAjB,EAAoB;mBACP3B,EAAX;;;;;;cAMMiK,KAAKC,KAAL,CAAWC,KAAvB;MACIxJ,WAAW,CAAX,IAAgBA,YAAYsJ,KAAKC,KAAL,CAAWE,MAA3C,EAAmD;;WAE1C,CAAC,CAAR;;;MAGE5K,gBAAcmB,QAAd,MAAJ;;MAEIiB,cAAc,CAAlB,EAAqB;WACZsE,SAAS,KAAT,cAA0B1G,IAA1B,2BAAoDoC,UAApD,QAAP,CADmB;GAArB,MAEO,IAAID,WAAW,CAAf,EAAkB;WAChBuE,SAAS,KAAT,cAA0B1G,IAA1B,2BAAoDmC,OAApD,QAAP,CADuB;;;SAIlBuE,SAAS,KAAT,cAA0B1G,IAA1B,OAAP,CAzCkD;;;;;;;;;;;;;AAsDpD,SAASyI,cAAT,CAAsBC,OAAtB,EAA+BC,IAA/B,QAEG;MADDzB,GACC,QADDA,GACC;;MACK0B,QAAQ;WACL,OAAOF,QAAQlD,KAAf,KAAyB,UAAzB,GAAsCkD,QAAQlD,KAAR,CAAcmD,IAAd,CAAtC,GAA4D,OAAOD,QAAQlD,KAAf,KAAyB,WAAzB,GAAuCkD,QAAQlD,KAA/C,GAAuDmD,IAD9G;GAAd;;QAIME,KAAN,GAAc,OAAOH,QAAQG,KAAf,KAAyB,UAAzB,GAAsCH,QAAQG,KAAR,CAAcF,IAAd,CAAtC,GAA4D,OAAOD,QAAQG,KAAf,KAAyB,WAAzB,GAAuCjC,OAAO8B,QAAQG,KAAf,CAAvC,GAA+DjC,OAAOgC,MAAMpD,KAAb,CAAzI,CALC;;MAOGkD,QAAQpG,KAAZ,EAAmB;UACX4D,MAAN,GAAe;cAAA;aAENwC,QAAQpG,KAAR,CAAc4E,GAAd;KAFT;;;SAMK0B,KAAP;;;AAGF,SAASiC,WAAT,QAYG;MAXDtI,KAWC,SAXDA,KAWC;MAVD6G,CAUC,SAVDA,CAUC;MATD0B,QASC,SATDA,QASC;MARDlG,CAQC,SARDA,CAQC;MAPDF,IAOC,SAPDA,IAOC;MAND+F,IAMC,SANDA,IAMC;MALDM,MAKC,SALDA,MAKC;MAJDC,GAIC,SAJDA,GAIC;MAHD7B,SAGC,SAHDA,SAGC;MAFD8B,MAEC,SAFDA,MAEC;MADDC,UACC,SADDA,UACC;;MACGC,WAAWL,QAAf;MACIlG,EAAEtC,KAAF,IAAWsC,EAAEtC,KAAF,KAAY8G,CAA3B,EAA8B;QACtBgC,aAAanD,mBAAiBrD,EAAEtC,KAAnB,EAA0BmI,IAA1B,EAAgC,EAAElI,YAAF,EAAhC,CAAnB;QACI6I,eAAe,CAAC,CAApB,EAAuB;;;eAGZC,OAAO,EAAEC,MAAMP,MAAR,EAAP,EAAyBK,WAAWJ,GAAX,CAAzB,CAAX;;SAEKE,UAAP,IAAqBzC,eAAa7D,CAAb,EAAgBuG,QAAhB,EAA0B,EAAEjE,KAAKiC,SAAP,EAA1B,EAA8CzE,IAA9C,CAArB;;;AAGF,SAAwBoE,SAAT,CAAiB5F,MAAjB,EAAyBC,OAAzB,EAAkCZ,KAAlC,EAAyCwG,IAAzC,EAA+C;MACtDC,OAAOtI,MAAMC,OAAN,CAAcuC,MAAd,IAAwBA,MAAxB,GAAiC,CAACA,MAAD,CAA9C;MACI+F,YAAY,EAAhB;OACKxE,OAAL,CAAa,UAACyE,GAAD,EAAS;QAChB,OAAOA,IAAI5G,KAAX,KAAqB,WAAzB,EAAsC;UAC9BlB,OAAO+B,QAAQG,GAAR,EAAb;UACM6F,YAAYhG,QAAQ+D,GAAR,EAAlB;UACMkC,IAAIC,QAAOH,IAAI5G,KAAX,MAAqB,QAArB,GAAgC4G,IAAI5G,KAApC,GAA4Ca,QAAQb,KAAR,CAAc4G,IAAI5G,KAAlB,CAAtD;;kCACwByG,KAAK/E,eAAL,CAAqBkF,GAArB,EAA0B/F,OAA1B,CAJY;UAI5Bc,KAJ4B,yBAI5BA,KAJ4B;UAIrBC,IAJqB,yBAIrBA,IAJqB;;UAK9BC,WAAWC,OAAOC,IAAP,CAAYJ,KAAZ,CAAjB;;UAEMuF,QAAQ,CAAC,CAACN,IAAIO,OAApB;UACMC,oBAAmBR,IAAIO,OAAvB,CAAN;UACME,UAAU,EAAhB;UACMC,eAAe,EAArB;UACMC,QAAQ,EAAd;;WAEK0B,UAAL,CAAgB9G,OAAhB,CAAwB,UAACgG,IAAD,EAAU;YAC1B/E,KAAKuC,mBAAiBmB,CAAjB,EAAoBqB,IAApB,EAA0B,EAAElI,YAAF,EAA1B,CAAX;YACImD,OAAO,CAAC,CAAZ,EAAe;;;aAGV8F,OAAL,CAAa/G,OAAb,CAAqB,UAACuG,GAAD,EAAMxK,CAAN,EAAY;cACzBuK,SAASN,KAAKC,KAAL,CAAWe,IAAX,GAAkBjL,CAAjC;cACMsK,WAAWO,OAAO,EAAEC,MAAMP,MAAR,EAAP,EAAyBrF,GAAGsF,GAAH,CAAzB,CAAjB;cACMT,MAAM9B,eAAavE,IAAb,EAAmB4G,QAAnB,EAA6B,EAAE5D,KAAKiC,SAAP,EAA7B,CAAZ;cACMkB,UAAUnG,KAAKoG,MAAL,IAAe,CAACpG,KAAKoG,MAAL,CAAYQ,QAAZ,CAAhC;cACIT,OAAJ,EAAa;;;;;;mBAMJ5F,OAAT,CAAiB,UAACC,IAAD,EAAU;gBACnBE,IAAIX,MAAMS,IAAN,CAAV;gBACItE,MAAMwE,EAAEpC,MAAF,IAAY,CAACoC,CAAD,CAAtB;;gBAEIA,EAAEpC,MAAN,EAAc;kBACRkC,IAAJ,IAAY,EAAZ;;gBAEED,OAAJ,CAAY,UAACiH,EAAD,EAAKC,IAAL,EAAc;0BACZ;4BAAA;oBAAA;kCAAA;mBAIPD,EAJO;0BAAA;4BAAA;0BAAA;8BAAA;wBAAA;oCAAA;wBAWF9G,EAAEpC,MAAF,GAAW+H,IAAI7F,IAAJ,CAAX,GAAuB6F,GAXrB;4BAYE3F,EAAEpC,MAAF,GAAWmJ,IAAX,GAAkBjH;eAZhC;aADF;;;;;;;gBAsBIE,EAAEpC,MAAN,EAAc;kBACNoJ,cAAcrB,IAAI7F,IAAJ,EAAUmB,GAAV,CAAc;uBAAK7E,EAAEwE,KAAP;eAAd,CAApB;kBACMqG,cAActB,IAAI7F,IAAJ,EAAUmB,GAAV,CAAc;uBAAK7E,EAAE6H,KAAP;eAAd,CAApB;kBACInE,IAAJ,IAAY;uBACH,OAAOE,EAAEY,KAAT,KAAmB,UAAnB,GAAgCZ,EAAEY,KAAF,CAAQoG,WAAR,CAAhC,GAAuD,OAAOhH,EAAEY,KAAT,KAAmB,WAAnB,GAAiCZ,EAAEY,KAAnC,GAA2CoG,WAD/F;eAAZ;kBAGIlH,IAAJ,EAAUmE,KAAV,GAAkB,OAAOjE,EAAEiE,KAAT,KAAmB,UAAnB,GAAgCjE,EAAEiE,KAAF,CAAQgD,WAAR,CAAhC,GAAuD,OAAOjH,EAAEiE,KAAT,KAAmB,WAAnB,GAAiCjC,OAAOhC,EAAEiE,KAAT,CAAjC,GAAmDjC,OAAO2D,IAAI7F,IAAJ,EAAUc,KAAjB,CAA5H,CANY;;WA7BhB;;;;cAyCIgE,KAAJ,EAAW;iBACJA,KAAL,CAAW;sBAAA;wBAECsB,QAFD;mBAGJP,GAHI;sBAIDX,YAJC;8BAAA;;aAAX;;;gBAUI3I,IAAN,CAAWsJ,GAAX;SA/DF;OALF;;;UAyEIf,KAAJ,EAAW;kBACCvI,IAAV,oCAAkB8H,KAAKyB,OAAL,CAAaZ,YAAb,EAA2B;oBAAA;4BAAA;;SAA3B,CAAlB;OADF,MAMO;kBACK3I,IAAV,kBAAkB4I,KAAlB;;;GA9FN;SAkGOZ,SAAP;;;;;;;;;;;;;;;ACvMF,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,OAAO6C,SAAM,EAAEA,SAAM,CAAC,GAAG,CAACA,SAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,cAAsC,CAAC,CAAC,EAAE,CAAa,CAAC,CAACC,cAAI,CAAC,UAAU,CAAC,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC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"}